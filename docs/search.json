[{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"surveyvoi: Survey Value of Information","text":"funding available conservation limited. ensure conservation funds allocated cost-effectively, conservation plans (termed prioritizations) can developed – using combination economic, biodiversity, land-use data – prioritize set sites conservation management (e.g. protected area establishment). However, existing data biodiversity patterns incomplete. consequence, prioritizations can potentially improved collecting additional data. Specifically, ecological surveys can conducted sites learn species present within . However, conducting ecological surveys reduces funds available conservation management. Thus, decision makers need strategically allocate funding surveying sites managing conservation—trivial task. surveyvoi R package decision support tool prioritizing sites ecological surveys based potential improve plans conserving biodiversity (e.g. plans establishing protected areas). Given set sites potentially acquired conservation management – wherein sites previously surveyed sites – can used generate evaluate plans additional surveys. Specifically, plans ecological surveys can generated using various conventional approaches (e.g. maximizing expected species richness, geographic coverage, diversity sampled environmental conditions) directly maximizing value information using optimization algorithms. generating plans surveys, can also evaluated using value information analysis. Please note several functions depend ‘Gurobi’ optimization software (available https://www.gurobi.com) gurobi R package (installation instructions available online Linux, Windows, Mac OS). tutorial provides brief overview surveyvoi R package. , simulate survey data, fit statistical models characterize spatial distribution simulated species, generate evaluate survey schemes based different approaches. Although tutorial deals single simulated species – keep tutorial simple reduce computational burden – functions used tutorial designed work multiple species. want learn specific function, please consult documentation written specifically function (accessible using R code ?function, function name desired function).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"surveyvoi: Survey Value of Information","text":"Let’s start setting R session. load R packages pre-set random number generators reproducibility.","code":"# load packages library(tidyr) library(dplyr) library(surveyvoi) library(ggplot2) library(gridExtra) library(viridis) library(tibble)  # set RNG seed for reproducibility set.seed(40)  # set default table printing options options(pillar.sigfig = 6, tibble.width = Inf)"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"simulate-data","dir":"Articles","previous_headings":"","what":"Simulate data","title":"surveyvoi: Survey Value of Information","text":"Let’s simulate data. keep things simple, simulate data 30 sites one conservation feature (e.g. species). 30 sites total, simulate survey data 15 sites—meaning 15 sites survey data. also simulate three spatially auto-correlated variables characterize environmental conditions within sites. Although simulation code (.e. simulate_site_data) can output probability features expected inhabit sites, disable option make simulation study realistic instead predict probabilities using statistical models.  site_data object spatially explicit dataset (.e. sf object) contains information site locations additional site attributes. , row corresponds different site, column contains different site attribute. f1 column contains results previous surveys, values describe proportion previous surveys species previously detected site. Since site single previous survey, data contain zeros (indicating species detected) ones (indicating species detected). n1 column contains number previous surveys conducted within site. Thus, sites zeros column previously surveyed. e1, e2, e3 columns contain environmental information site (e.g. normalized temperature rainfall data). survey_cost column contains cost surveying site, management_cost column contains cost managing site conservation. help understand simulated data, let’s create visualizations.     simulating data sites, simulate data conservation feature. set proportion_of_survey_features = 1 indicate feature examined future surveys. feature_data object table (.e. tibble object) contains information conservation feature. , row corresponds different feature – one row one feature – column contains different information feature(s). name column contains name feature. survey column indicates feature examined future surveys. survey_sensitivity survey_specificity columns denote sensitivity (probability correctly recording presence) specificity (probability correctly recording absence) survey methodology. Finally, target column specifies number occupied sites species ideally represented prioritization.","code":"# simulate site data site_data <- simulate_site_data(   n_sites = 30, n_features = 1, proportion_of_sites_missing_data = 15 / 30,   n_env_vars = 3, survey_cost_intensity = 5, management_cost_intensity = 2500,   max_number_surveys_per_site = 1, output_probabilities = FALSE)  # print site data print(site_data) ## Simple feature collection with 30 features and 7 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 0.07758767 ymin: 0.03189323 xmax: 0.9762666 ymax: 0.9557619 ## CRS:           NA ## # A tibble: 30 × 8 ##    survey_cost management_cost    f1    n1        e1        e2         e3 ##          <dbl>           <dbl> <dbl> <dbl>     <dbl>     <dbl>      <dbl> ##  1           9            2458     0     0  0.334113  0.502778 -1.00012   ##  2           1            2524     0     1 -1.32716  -1.19893   1.06494   ##  3           3            2483     0     0 -1.18385   0.676827  0.387451  ##  4          12            2513     0     0  0.691077 -0.926471 -0.244236  ##  5           4            2477     0     0  0.832864  2.70543  -0.351963  ##  6           8            2481     0     1 -0.870905 -0.635214 -0.779346  ##  7           1            2499     1     1  0.774926  1.31091  -0.0104341 ##  8           6            2479     0     0  1.34695   0.220259  0.824172  ##  9           7            2484     0     1 -0.670210 -0.729128 -0.912692  ## 10          11            2519     0     0  0.125632  0.313454 -1.37448   ##                geometry ##                 <POINT> ##  1  (0.683582 0.841256) ##  2  (0.872904 0.240454) ##  3  (0.690117 0.679761) ##  4 (0.115936 0.0704436) ##  5  (0.195009 0.646561) ##  6  (0.461201 0.102122) ##  7  (0.203535 0.955762) ##  8  (0.590849 0.748232) ##  9  (0.373888 0.150227) ## 10  (0.141298 0.307626) ## # ℹ 20 more rows # plot the spatial location of the sites ggplot(site_data) +   geom_sf() +   ggtitle(\"Sites\") +   labs(x = \"X coordinate\", y = \"Y coordinate\") # plot site occupancy data from previous surveys # 1 = species was detected in 100% of the previous surveys # 0 = species was detected in 0% of the previous surveys site_data %>%   select(starts_with(\"f\")) %>%   gather(name, value, -geometry) %>%   mutate(value = as.character(value)) %>%   ggplot() +   geom_sf(aes(color = value)) +     scale_color_manual(values = c(\"1\" = \"red\", \"0\" = \"black\")) +     facet_wrap(~ name) +     labs(title = \"Detection/non-detection data\",          x = \"X coordinate\", y = \"Y coordinate\") # plot number of previous surveys within each site site_data %>%   select(starts_with(\"n\")) %>%   gather(name, value, -geometry) %>%   mutate(value = as.character(value)) %>%   ggplot() +   geom_sf(aes(color = value)) +     scale_color_manual(values = c(\"1\" = \"blue\", \"0\" = \"black\")) +     facet_wrap(~ name) +     labs(title = \"Number of previous surveys\",          x = \"X coordinate\", y = \"Y coordinate\") # plot site cost data # note that survey and management costs are on different scales p1 <- ggplot(site_data) +       geom_sf(aes(color = survey_cost)) +       scale_color_viridis() +       labs(title = \"Survey cost\", x = \"X coordinate\", y = \"Y coordinate\") +       theme(legend.title = element_blank()) p2 <- ggplot(site_data) +       geom_sf(aes(color = management_cost)) +       scale_color_viridis() +       labs(title = \"Management cost\", x = \"X coordinate\", y = \"Y coordinate\") +       theme(legend.title = element_blank()) grid.arrange(p1, p2, nrow = 1) # plot site environmental data site_data %>%   select(starts_with(\"e\")) %>%   gather(var, value, -geometry) %>%   ggplot() +   geom_sf(aes(color = value)) +     facet_wrap(~ var) +     scale_color_viridis() +     labs(title = \"Environmental conditions\",          x = \"X coordinate\", y = \"Y coordinate\") # simulate feature data feature_data <- simulate_feature_data(   n_features = 1, proportion_of_survey_features = 1)  # remove simulated model performance statistics since we will fit models below feature_data$model_sensitivity <- NULL feature_data$model_specificity <- NULL  # manually set target feature_data$target <- 2  # print feature data print(feature_data) ## # A tibble: 1 × 5 ##   name  survey survey_sensitivity survey_specificity target ##   <chr> <lgl>               <dbl>              <dbl>  <dbl> ## 1 f1    TRUE             0.989102           0.834741      2"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"modeling-probability-of-occupancy","dir":"Articles","previous_headings":"","what":"Modeling probability of occupancy","title":"surveyvoi: Survey Value of Information","text":"simulating data, need estimate probability feature occurring unsurveyed sites. important calculating potential benefits surveying sites, can reliably predict probability feature(s) occurring unsurveyed sites using models, may need conduct additional surveys. Specifically, fit gradient boosted regression trees – via xgboost R package. models well-suited modeling species distributions can accommodate high order interactions among different predictor variables needed effectively model species’ environmental niches, even case limited data. Furthermore, can incorporate knowledge sensitivity specificity previous surveys model fitting (using weights). fitting models, can examine tuning parameters used fit models, extract modeled probability occupancy, evaluate performance models.","code":"# create list of candidate parameter values for calibration procedure xgb_parameters <- list(eta = 0.1, lambda = 0.1, objective = \"binary:logistic\")  # identify suitable parameters for model fitting # ideally we would try a larger range of values (i.e. not just a single value of 0.1), # but we will keep it low to reduce processing time for this example xgb_results <- fit_xgb_occupancy_models(   site_data, feature_data,   c(\"f1\"), c(\"n1\"), c(\"e1\", \"e2\", \"e3\"),   \"survey_sensitivity\", \"survey_specificity\",   n_folds = c(2), xgb_tuning_parameters = xgb_parameters) # print best parameters print(xgb_results$parameters) ## [[1]] ## [[1]]$eta ## [1] 0.1 ##  ## [[1]]$lambda ## [1] 0.1 ##  ## [[1]]$objective ## [1] \"binary:logistic\" ##  ## [[1]]$scale_pos_weight ## [[1]]$scale_pos_weight[[1]] ## [1] 1 1 # print model performance (TSS value) xgb_performance <- xgb_results$performance print(data.frame(xgb_performance)) ##   feature train_tss_mean train_tss_std train_sensitivity_mean ## 1      f1              1             0                      1 ##   train_sensitivity_std train_specificity_mean train_specificity_std ## 1                     0                      1                     0 ##   test_tss_mean test_tss_std test_sensitivity_mean test_sensitivity_std ## 1     0.7194687    0.2261671             0.9396965           0.08528208 ##   test_specificity_mean test_specificity_std ## 1             0.7797722            0.3114492 # store the model sensitivities and specificities in the feature_data object feature_data$model_sensitivity <- xgb_performance$test_sensitivity_mean feature_data$model_specificity <- xgb_performance$test_specificity_mean  # store predicted probabilities in the site_data object xgb_predictions <- xgb_results$predictions print(xgb_predictions) ## # A tibble: 30 × 1 ##          f1 ##       <dbl> ##  1 0.565847 ##  2 0.410422 ##  3 0.410541 ##  4 0.452530 ##  5 0.565847 ##  6 0.410422 ##  7 0.565847 ##  8 0.565847 ##  9 0.452463 ## 10 0.565847 ## # ℹ 20 more rows site_data$p1 <- xgb_predictions$f1 # plot site-level estimated occupancy probabilities site_data %>%   select(starts_with(\"p\")) %>%   gather(name, value, -geometry) %>%   ggplot() +   geom_sf(aes(color = value)) +   facet_wrap(~name) +   scale_color_viridis() +   labs(title = \"Modeled probabilities\", x = \"X coordinate\", y = \"Y coordinate\")"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"expected-value-given-current-information","dir":"Articles","previous_headings":"","what":"Expected value given current information","title":"surveyvoi: Survey Value of Information","text":"simulating modeling data, now examine expected value decision given current information. value represents conservation value near-optimal prioritization given current information, whilst accounting uncertainty presence (absence) conservation feature site. Specifically, “current information” refers existing survey data occupancy models. Next, set total budget (.e. total_budget). total budget represents total amount resources available surveying sites managing conservation. set 10% total site management costs. Given total budget, can now calculate expected value decision given current information. can potentially improve expected value decision given current information learning sites likely (less likely) contain conservation feature.","code":"# calculate total budget for surveying and managing sites total_budget <- sum(site_data$management_cost) * 0.1  # print total budget print(total_budget) ## [1] 7498.9 # expected value of the decision given current information evd_current <- evdci(   site_data = site_data,   feature_data = feature_data,   site_detection_columns = c(\"f1\"),   site_n_surveys_columns = c(\"n1\"),   site_probability_columns = c(\"p1\"),   site_management_cost_column = \"management_cost\",   feature_survey_sensitivity_column = \"survey_sensitivity\",   feature_survey_specificity_column = \"survey_specificity\",   feature_model_sensitivity_column = \"model_sensitivity\",   feature_model_specificity_column = \"model_specificity\",   feature_target_column = \"target\",   total_budget = total_budget)  # print value print(evd_current) ## [1] 0.9443835"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"survey-schemes","dir":"Articles","previous_headings":"","what":"Survey schemes","title":"surveyvoi: Survey Value of Information","text":"Now generate candidate survey schemes see can improve management decision. achieve , set budget surveying additional sites. Specifically, survey budget (.e. survey_budget) set 25% survey costs unsurveyed sites. Note total budget must always greater equal survey budget. generate survey schemes selecting unsurveyed sites () increase geographic coverage among surveyed sites (Yates 1948), (ii) increase coverage environmental conditions among surveyed sites [.e. environmental diversity; Faith & Walker (1996)], (iii) increase coverage sites highly uncertain information (Guisan et al. 2006), (iv) increase coverage sites species predicted occur (Le Lay et al. 2010), (v) increase coverage sites low management costs. Let’s visualize different survey schemes.  can see different approaches yield different survey schemes – well perform?","code":"# calculate budget for surveying sites #   add column to site_data indicating if the sites already have data or not site_data$surveyed <- site_data$n1 > 0.5  #   add column to site_data containing the additional survey costs, #   i.e. sites that already have data have zero cost, and #   sites that are missing data retain their cost values site_data <-   site_data %>%   mutate(new_survey_cost = if_else(surveyed, 0, survey_cost))  #   calculate total cost of surveying remaining unsurveyed sites total_cost_of_surveying_remaining_sites <-   sum(site_data$new_survey_cost)  #   calculate budget for surveying sites survey_budget <- total_cost_of_surveying_remaining_sites * 0.25  # print budgets print(survey_budget) ## [1] 30.75 print(total_budget) ## [1] 7498.9 # (i) generate survey scheme to increase geographic coverage geo_scheme <-   geo_cov_survey_scheme(     site_data, \"new_survey_cost\", survey_budget, locked_out = \"surveyed\")  # (ii) generate survey scheme to increase environmental diversity, # environmental distances are calculated using Euclidean distances here, # though we might consider something like Mahalanobis distances for a # real dataset to account for correlations among environmental variables) env_scheme <-   env_div_survey_scheme(     site_data, \"new_survey_cost\", survey_budget, c(\"e1\", \"e2\", \"e3\"),     locked_out = \"surveyed\", method = \"euclidean\")  # (iii) generate survey scheme using site uncertainty scores # calculate site uncertainty scores site_data$uncertainty_score <- relative_site_uncertainty_scores(site_data, \"p1\")  # generate survey scheme unc_scheme <-   weighted_survey_scheme(     site_data, \"new_survey_cost\", survey_budget, \"uncertainty_score\",     locked_out = \"surveyed\")  # (iv) generate survey scheme using lowest cost of site management # (i.e. inverse management cost) site_data$inv_management_cost <- 1 / site_data$management_cost cheap_scheme <-   weighted_survey_scheme(     site_data, \"new_survey_cost\", survey_budget, \"inv_management_cost\",     locked_out = \"surveyed\")  # (v) generate survey scheme using site species richness scores # calculate site species richness scores site_data$richness_score <- relative_site_richness_scores(site_data, \"p1\")  # generate survey scheme rich_scheme <-   weighted_survey_scheme(     site_data, \"new_survey_cost\", survey_budget, \"richness_score\",     locked_out = \"surveyed\") # add schemes to site_data site_data$geo_scheme <- c(geo_scheme) site_data$env_scheme <- c(env_scheme) site_data$unc_scheme <- c(unc_scheme) site_data$cheap_scheme <- c(cheap_scheme) site_data$rich_scheme <- c(rich_scheme)  # plot the schemes site_data %>%   select(contains(\"scheme\")) %>%   gather(name, value, -geometry) %>%   mutate_if(is.logical, as.character) %>%   mutate(name = factor(name, levels = unique(name))) %>%   ggplot() +     geom_sf(aes(color = value)) +     facet_wrap(~ name, nrow = 2) +     scale_color_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"black\")) +   labs(x = \"X coordinate\", y = \"Y coordinate\")"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"expected-value-of-the-decision-given-sample-information","dir":"Articles","previous_headings":"","what":"Expected value of the decision given sample information","title":"surveyvoi: Survey Value of Information","text":"Now ’ve generated survey schemes, let’s calculate expected value decision given sample information survey scheme. can also calculate much information gained survey schemes expected improve management decision. quantity called expected value sample information (EVSI) survey scheme.  particular simulation, can see survey schemes low expected value sample information (.e. values close zero). means none survey schemes likely lead substantially better conservation outcome considering funds spent conducting . survey schemes negative values, means expected poorer conservation outcomes simply using existing information. can see surveying sites cheapest management costs best strategy – particular situation – highest expected value sample information, can even better different scheme?","code":"# create table to store results evd_survey_schemes <-   tibble(name = c(\"geo_scheme\", \"env_scheme\", \"unc_scheme\", \"cheap_scheme\",                   \"rich_scheme\"))  # expected value of the decision given each survey scheme evd_survey_schemes$value <- sapply(   evd_survey_schemes$name, function(x) {     evdsi(       site_data = site_data,       feature_data = feature_data,       site_detection_columns = c(\"f1\"),       site_n_surveys_columns = c(\"n1\"),       site_probability_columns = c(\"p1\"),       site_survey_scheme_column = as.character(x),       site_management_cost_column = \"management_cost\",       site_survey_cost_column = \"survey_cost\",       feature_survey_column = \"survey\",       feature_survey_sensitivity_column = \"survey_sensitivity\",       feature_survey_specificity_column = \"survey_specificity\",       feature_model_sensitivity_column = \"model_sensitivity\",       feature_model_specificity_column = \"model_specificity\",       feature_target_column = \"target\",       total_budget = total_budget) })  # print values print(evd_survey_schemes) ## # A tibble: 5 × 2 ##   name            value ##   <chr>           <dbl> ## 1 geo_scheme   0.981973 ## 2 env_scheme   0.986738 ## 3 unc_scheme   0.986738 ## 4 cheap_scheme 0.993256 ## 5 rich_scheme  0.988133 # estimate expected value of sample information for each survey scheme evd_survey_schemes$evsi <-   evd_survey_schemes$value - evd_current  # print values print(evd_survey_schemes) ## # A tibble: 5 × 3 ##   name            value      evsi ##   <chr>           <dbl>     <dbl> ## 1 geo_scheme   0.981973 0.0375896 ## 2 env_scheme   0.986738 0.0423546 ## 3 unc_scheme   0.986738 0.0423546 ## 4 cheap_scheme 0.993256 0.0488727 ## 5 rich_scheme  0.988133 0.0437499 # visualize the expected value of sample information for each survey scheme # color the best survey scheme in blue evd_survey_schemes %>%   mutate(name = factor(name, levels = name),          is_best = evsi == max(evsi)) %>%   ggplot(aes(x = name, y = evsi)) +     geom_col(aes(fill = is_best, color = is_best)) +     xlab(\"Survey scheme\") +     ylab(\"Expected value of sample information\") +     scale_color_manual(values = c(\"TRUE\" = \"#3366FF\", \"FALSE\" = \"black\")) +     scale_fill_manual(values = c(\"TRUE\" = \"#3366FF\", \"FALSE\" = \"black\")) +     theme(axis.text.x = element_text(angle = 30, vjust = 0.65),           legend.position = \"none\")"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"optimized-survey-scheme","dir":"Articles","previous_headings":"","what":"Optimized survey scheme","title":"surveyvoi: Survey Value of Information","text":"Now let’s generate optimized survey scheme directly maximizing expected value decision given survey scheme.  can see optimized survey scheme (opt_scheme) different previous survey schemes.  can see optimized survey scheme highest expected value sample information candidate survey schemes. better understand sub-optimal candidate survey schemes , let’s compute relative performance visualize .  can see optimized survey scheme performs better survey schemes. Although optimized survey scheme doesn’t provide substantial improvement particular situation, can see value information analysis can potentially improve management decisions strategically allocating funds surveys conservation management. Indeed, since considered single species handful sites – keep tutorial simple reduce computational burden – unlikely optimized survey scheme perform substantially better simply using current information. want try something complex, try adapting code tutorial simulate larger number sites multiple species?","code":"# generate optimized survey scheme(s) opt_scheme <- approx_near_optimal_survey_scheme(     site_data = site_data,     feature_data = feature_data,     site_detection_columns = c(\"f1\"),     site_n_surveys_columns = c(\"n1\"),     site_probability_columns = c(\"p1\"),     site_management_cost_column = \"management_cost\",     site_survey_cost_column = \"survey_cost\",     feature_survey_column = \"survey\",     feature_survey_sensitivity_column = \"survey_sensitivity\",     feature_survey_specificity_column = \"survey_specificity\",     feature_model_sensitivity_column = \"model_sensitivity\",     feature_model_specificity_column = \"model_specificity\",     feature_target_column = \"target\",     total_budget = total_budget,     survey_budget = total_budget,     n_approx_replicates = 5,     n_approx_outcomes_per_replicate = 10000,     verbose = TRUE) # print number of optimized survey schemes # if there are multiple optimized survey schemes, # this means that multiple different survey schemes are likely to deliver # similar results (even if they select different sites for surveys) print(nrow(opt_scheme)) ## [1] 1 # add first optimized scheme to site data site_data$opt_scheme <- c(opt_scheme[1, ])  # plot optimized scheme site_data %>% mutate(name = \"opt_scheme\") %>% ggplot() + geom_sf(aes(color = opt_scheme)) + facet_wrap(~ name, nrow = 1) + scale_color_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"black\")) + labs(x = \"X coordinate\", y = \"Y coordinate\") # calculate expected value of sample information for the optimized scheme evd_opt <- evdsi(     site_data = site_data,     feature_data = feature_data,     site_detection_columns = c(\"f1\"),     site_n_surveys_columns = c(\"n1\"),     site_probability_columns = c(\"p1\"),     site_survey_scheme_column = \"opt_scheme\",     site_management_cost_column = \"management_cost\",     site_survey_cost_column = \"survey_cost\",     feature_survey_column = \"survey\",     feature_survey_sensitivity_column = \"survey_sensitivity\",     feature_survey_specificity_column = \"survey_specificity\",     feature_model_sensitivity_column = \"model_sensitivity\",     feature_model_specificity_column = \"model_specificity\",     feature_target_column = \"target\",     total_budget = total_budget)  # calculate value print(evd_opt) ## [1] 0.9934998 # append optimized results to results table evd_survey_schemes <- rbind(   evd_survey_schemes,   tibble(name = \"opt_scheme\", value = evd_opt, evsi = evd_opt - evd_current))  # print updated results table print(evd_survey_schemes) ## # A tibble: 6 × 3 ##   name            value      evsi ##   <chr>           <dbl>     <dbl> ## 1 geo_scheme   0.981973 0.0375896 ## 2 env_scheme   0.986738 0.0423546 ## 3 unc_scheme   0.986738 0.0423546 ## 4 cheap_scheme 0.993256 0.0488727 ## 5 rich_scheme  0.988133 0.0437499 ## 6 opt_scheme   0.993500 0.0491163 # visualize expected value of sample information # color the best survey scheme in blue evd_survey_schemes %>%   mutate(name = factor(name, levels = name),          is_best = evsi == max(evsi)) %>%   ggplot(aes(x = name, y = evsi)) +     geom_col(aes(fill = is_best, color = is_best)) +     xlab(\"Survey scheme\") +     ylab(\"Expected value of sample information\") +     scale_color_manual(values = c(\"TRUE\" = \"#3366FF\", \"FALSE\" = \"black\")) +     scale_fill_manual(values = c(\"TRUE\" = \"#3366FF\", \"FALSE\" = \"black\")) +     theme(axis.text.x = element_text(angle = 30, vjust = 0.65),           legend.position = \"none\") # express values in terms of relative performance evd_survey_schemes$relative_performance <-   ((max(evd_survey_schemes$evsi) - evd_survey_schemes$evsi) /    evd_survey_schemes$evsi) * 100  # visualize relative performance # zero = same performance as optimized scheme, # higher values indicate greater sub-optimality evd_survey_schemes %>%   mutate(name = factor(name, levels = name),          relative_performance = abs(relative_performance),          is_best = relative_performance == min(relative_performance)) %>%   ggplot(aes(x = name, y = relative_performance)) +     geom_point(aes(fill = is_best, color = is_best)) +     xlab(\"Survey scheme\") +     ylab(\"Performance gap (%)\") +     scale_color_manual(values = c(\"TRUE\" = \"#3366FF\", \"FALSE\" = \"black\")) +     scale_fill_manual(values = c(\"TRUE\" = \"#3366FF\", \"FALSE\" = \"black\")) +     theme(axis.text.x = element_text(angle = 30, vjust = 0.65),           legend.position = \"none\")"},{"path":"https://github.com/prioritizr/surveyvoi/articles/surveyvoi.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"surveyvoi: Survey Value of Information","text":"Hopefully, tutorial useful. questions using surveyvoi R package suggestions improving , please file issue package’s online coding repository (https://github.com/prioritizr/surveyvoi/issues).","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeffrey O Hanson. Author, maintainer. Iadine Chadès. Author. Emma J Hudgins. Author. Joseph R Bennett. Author.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanson JO, McCune JL, Chad'es , Proctor CA, Hudgins EJ, Bennett JR (2022). “Optimizing ecological surveys conservation.” Journal Applied Ecology, 60(1), 41–51. doi:10.1111/1365-2664.14309.","code":"@Article{,   title = {Optimizing ecological surveys for conservation},   author = {Jeffrey O Hanson and Jenny L McCune and Iadine Chad{`{e}}s and Caitlyn A Proctor and Emma J Hudgins and Joseph R Bennett},   year = {2022},   journal = {Journal of Applied Ecology},   volume = {60},   number = {1},   pages = {41--51},   doi = {10.1111/1365-2664.14309}, }"},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"surveyvoi-survey-value-of-information","dir":"","previous_headings":"","what":"Survey Value of Information","title":"Survey Value of Information","text":"surveyvoi package decision support tool prioritizing sites ecological surveys based potential improve plans conserving biodiversity (e.g. plans establishing protected areas). Given set sites potentially acquired conservation management – wherein sites previously surveyed sites – package provides functionality generate evaluate plans additional surveys. Specifically, plans ecological surveys can generated using various conventional approaches (e.g. maximizing expected species richness, geographic coverage, diversity sampled environmental conditions) maximizing value information. generating plans surveys, can also evaluated using value information analysis. Please note several functions depend Gurobi optimization software (available https://www.gurobi.com). Additionally, JAGS software (available https://mcmc-jags.sourceforge.io/) required fit hierarchical generalized linear models.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Survey Value of Information","text":"latest official version can installed Comprehensive R Archive Network (CRAN) using following R code. Alternatively, latest development version can installed GitHub using following code. Please note developmental versions may contain additional features present official version, may also contain coding errors.","code":"install.packages(\"surveyvoi\", repos = \"https://cran.rstudio.com/\") if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"prioritizr/surveyvoi\")"},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"windows","dir":"","previous_headings":"Installation","what":"Windows","title":"Survey Value of Information","text":"Rtools software needs installed install surveyvoi R package source. software provides system requirements rwinlib.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"ubuntu","dir":"","previous_headings":"Installation","what":"Ubuntu","title":"Survey Value of Information","text":"gmp, fftw3, mpfr, symphony libraries need installed install surveyvoi R package. Although fftw3 symphony libraries used directly, needed successfully install dependencies. recent versions Ubuntu (18.04 later), libraries available official repositories. can installed using following system commands:","code":"apt-get -y update apt-get install -y libgmp3-dev libfftw3-dev libmpfr-dev coinor-libsymphony-dev"},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"linux","dir":"","previous_headings":"Installation","what":"Linux","title":"Survey Value of Information","text":"Unix-alikes, gmp (>= 4.2.3), mpfr (>= 3.0.0), fftw3 (>= 3.3), symphony (>= 5.6.16) required.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"macos","dir":"","previous_headings":"Installation","what":"macOS","title":"Survey Value of Information","text":"gmp, fftw, mpfr, symphony libraries required. Although fftw3 symphony libraries used directly, needed successfully install dependencies. easiest way install libraries using HomeBrew. installing HomeBrew, libraries can installed using following commands system terminal:","code":"brew tap coin-or-tools/coinor brew install symphony brew install pkg-config brew install gmp brew install fftw brew install mpfr"},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Survey Value of Information","text":"Please cite surveyvoi R package using publications. cite package, please use: Hanson, JO, McCune JL, Chadès , Proctor CA, Hudgins EJ, & Bennett JR (2023) Optimizing ecological surveys conservation. Journal Applied Ecology, 60: 41–51. Available https://doi.org/10.1111/1365-2664.14309.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Survey Value of Information","text":"provide short example showing use surveyvoi R package prioritize funds ecological surveys. example, generate plans conducting ecological surveys (termed “survey schemes”) using simulated data six sites three conservation features (e.g. bird species). start , set seed random number generator reproducibility load R packages. Now load datasets distributed package. First, load sim_sites object. spatially explicit dataset (.e. sf object) contains information sites within study area. Critically, contains () sites already surveyed, (ii) candidate sites additional surveys, (iii) sites already protected, (iv) candidate sites protected future. row corresponds different site, column describes different properties associated site. table, \"management_cost\" column indicates cost protecting site; \"survey_cost\" column indicates cost conducting ecological survey within site; \"e1\" \"e2\" columns contain environmental data site (used example). remaining columns describe existing survey data spatial distribution features across sites. \"n1\", \"n2\", \"n3\" columns indicate number surveys conducted within site looked three features (respectively); \"f1\", \"f2\", \"f3\" columns describe proportion surveys within site looked feature feature detected (respectively). example, \"n1\" value 2 \"f1\" value 0.5 given site, feature \"f1\" detected one two surveys conducted site looked feature. Finally, \"p1\", \"p2\", \"p3\" columns contain modeled probability estimates species present site (see fit_hglm_occupancy_models() fit_xgb_occupancy_models() generate estimates data).      Next, load sim_features object. table contains information conservation features (e.g. species). Specifically, row corresponds different feature, column contains information associated features. table, \"name\" column contains name feature; \"survey\" column indicates whether future surveys look species; \"survey_sensitivity\" \"survey_specificity\" columns denote sensitivity (true positive rate) specificity (true negative rate) survey methodology correctly detecting feature; \"model_sensitivity\" \"model_specificity\" columns denote sensitivity (true positive rate) specificity (true negative rate) species distribution models fitted feature; \"target\" column denotes required number protected sites feature (termed “representation target”, feature target 2 site). loading data, now generate optimized ecological survey scheme. achieve , use approx_optimal_survey_scheme() function. function uses greedy heuristic algorithm maximize value information. Although functions can return solutions guaranteed optimal (.e. optimal_survey_scheme()), can take long time complete use brute-force approach. function also uses approximation routine reduce computational burden. perform optimization, set total budget () protecting sites (ii) surveying sites. Although might hesitant specify budget, please recall make different plans depending available funds. instance, near infinite funds wouldn’t bother conducting surveys simply protect everything. Similarly, limited funds, wouldn’t survey sites ensure least one site protected. Generally, conservation planning problems occur somewhere two extremes—optimization process can’t take account don’t specify budget. brevity, set total budget 90% total costs protecting sites.  just taster surveyvoi R package. addition functionality, can used evaluate survey schemes using value information analysis. Furthermore, can used generate survey schemes using conventional approaches (e.g. sampling environmental gradients, selecting places highly uncertain information). information, see package vignette.","code":"set.seed(502)      # set RNG for reproducibility library(surveyvoi) # package for value of information analysis library(dplyr)     # package for preparing data library(tidyr)     # package for preparing data library(ggplot2)   # package for plotting data # load data data(sim_sites)  # print table print(sim_sites, width = Inf) ## Simple feature collection with 6 features and 13 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 ## CRS:           NA ## # A tibble: 6 × 14 ##   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 ##         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> ## 1          19              99     0     0  0        0     0     0  1.13   0.535 ## 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  ## 3          13              94     1     1  0        1     1     1  0.155 -0.867 ## 4          19              61     0     0  0        0     0     0 -0.792  1.32  ## 5           9             105     0     0  0        0     0     0 -0.194  0.238 ## 6          12             136     0     0  0        0     0     0  1.07   0.220 ##      p1    p2    p3               geometry ##   <dbl> <dbl> <dbl>                <POINT> ## 1 0.999 0.988 0.21   (0.03529733 0.544939) ## 2 0.001 0.995 0.152    (0.33276 0.3174416) ## 3 0.966 1     0.017 (0.6141922 0.07851093) ## 4 0     0     1     (0.02541313 0.1147132) ## 5 0.11  0.006 0.831  (0.9888107 0.2152785) ## 6 1     1     0.082   (0.9038749 0.717068) # plot cost of protecting each site ggplot(sim_sites) + geom_sf(aes(color = management_cost), size = 4) + ggtitle(\"management_cost\") + theme(legend.title = element_blank()) # plot cost of conducting an additional survey in each site # note that these costs are much lower than the protection costs ggplot(sim_sites) + geom_sf(aes(color = survey_cost), size = 4) + ggtitle(\"survey_cost\") + theme(legend.title = element_blank()) # plot survey data ## n1, n2, n3: number of surveys in each site that looked for each feature sim_sites %>% select(n1, n2, n3) %>% gather(name, value, -geometry) %>% ggplot() + geom_sf(aes(color = value), size = 4) + facet_wrap(~name, nrow = 1) # plot survey results ## f1, f2, f3: proportion of surveys in each site that looked for each feature ##             that detected the feature sim_sites %>% select(f1, f2, f3) %>% gather(name, value, -geometry) %>% ggplot() + geom_sf(aes(color = value), size = 4) + facet_wrap(~name, nrow = 1) + scale_color_continuous(limits = c(0, 1)) # plot modeled probability of occupancy data sim_sites %>% select(p1, p2, p3) %>% gather(name, value, -geometry) %>% ggplot() + geom_sf(aes(color = value), size = 4) + facet_wrap(~name, nrow = 1) + scale_color_continuous(limits = c(0, 1)) # load data data(sim_features)  # print table print(sim_features, width = Inf) ## # A tibble: 3 × 7 ##   name  survey survey_sensitivity survey_specificity model_sensitivity ##   <chr> <lgl>               <dbl>              <dbl>             <dbl> ## 1 f1    TRUE                0.951              0.854             0.711 ## 2 f2    TRUE                0.990              0.832             0.722 ## 3 f3    TRUE                0.986              0.808             0.772 ##   model_specificity target ##               <dbl>  <dbl> ## 1             0.841      2 ## 2             0.806      2 ## 3             0.871      2 # calculate budget budget <- sum(0.4 * sim_sites$management_cost)  # generate optimized survey scheme opt_scheme <-   approx_optimal_survey_scheme(     site_data = sim_sites,     feature_data = sim_features,     site_detection_columns = c(\"f1\", \"f2\", \"f3\"),     site_n_surveys_columns = c(\"n1\", \"n2\", \"n3\"),     site_probability_columns = c(\"p1\", \"p2\", \"p3\"),     site_management_cost_column = \"management_cost\",     site_survey_cost_column = \"survey_cost\",     feature_survey_column = \"survey\",     feature_survey_sensitivity_column = \"survey_sensitivity\",     feature_survey_specificity_column = \"survey_specificity\",     feature_model_sensitivity_column = \"model_sensitivity\",     feature_model_specificity_column = \"model_specificity\",     feature_target_column = \"target\",     total_budget = budget,     survey_budget = budget,     verbose = TRUE   ) # the opt_scheme object is a matrix that contains the survey schemes # each column corresponds to a different site, # and each row corresponds to a different solution # in the event that there are multiple near-optimal survey schemes, then this # matrix will have multiple rows print(str(opt_scheme)) ##  logi [1, 1:6] TRUE FALSE FALSE TRUE TRUE FALSE ##  - attr(*, \"ev\")= num [1, 1:100] 0.596 0.596 0.596 0.596 0.596 ... ## NULL # let's add the first solution (row) in opt_scheme to the site data to plot it sim_sites$scheme <- c(opt_scheme[1, ])  # plot scheme # TRUE = selected for an additional ecological survey # FALSE = not selected ggplot(sim_sites) + geom_sf(aes(color = scheme), size = 4) + ggtitle(\"scheme\") + theme(legend.title = element_blank())"},{"path":"https://github.com/prioritizr/surveyvoi/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Survey Value of Information","text":"questions using surveyvoi R package suggestions improving , please file issue package’s online code repository.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_evdsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate expected value of the decision given survey information — approx_evdsi","title":"Approximate expected value of the decision given survey information — approx_evdsi","text":"Calculate expected value management decision given survey information. metric describes value management decision expected decision maker conducts surveys set sites inform decision. speed calculations, approximation method used.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_evdsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate expected value of the decision given survey information — approx_evdsi","text":"","code":"approx_evdsi(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   site_management_cost_column,   site_survey_scheme_column,   site_survey_cost_column,   feature_survey_column,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column,   feature_target_column,   total_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL,   prior_matrix = NULL,   n_approx_replicates = 100,   n_approx_outcomes_per_replicate = 10000,   seed = 500 )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_evdsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate expected value of the decision given survey information — approx_evdsi","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. site_survey_scheme_column character name logical (TRUE / FALSE) column argument site_data indicates sites selected scheme . missing NA values permitted. Additionally, sites missing data can selected surveying (per argument site_detection_columns). site_survey_cost_column character name column argument  site_data contains costs surveying site. column numeric values equal greater zero. missing (NA) values permitted column. feature_survey_column character name column argument feature_data contains logical (TRUE / FALSE) values indicating feature surveyed planned surveys . Note considering additional features rapidly increase computational burden, recommended consider features specific conservation interest. missing (NA) values permitted column. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked . prior_matrix numeric matrix containing prior probability feature occupying site. Rows correspond features, columns correspond sites. Defaults NULL prior data calculated automatically using prior_probability_matrix(). n_approx_replicates integer number replicates use approximating expected value calculations. Defaults 100. n_approx_outcomes_per_replicate integer number outcomes use per replicate approximation calculations. Defaults 10000. seed integer state random number generator simulating outcomes conducting value information analyses. Defaults 500.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_evdsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate expected value of the decision given survey information — approx_evdsi","text":"numeric vector containing expected values replicate.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_evdsi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Approximate expected value of the decision given survey information — approx_evdsi","text":"function uses approximation methods estimate expected value calculations. accuracy calculations depend arguments n_approx_replicates n_approx_outcomes_per_replicate, may need increase parameters large problems.","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_evdsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate expected value of the decision given survey information — approx_evdsi","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation  # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # create a survey scheme that samples the first two sites that # are missing data sim_sites$survey_site <- FALSE sim_sites$survey_site[which(sim_sites$n1 < 0.5)[1:2]] <- TRUE  # calculate expected value of management decision given the survey # information using approximation method approx_ev_survey <- approx_evdsi(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"management_cost\", \"survey_site\",   \"survey_cost\", \"survey\", \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\",   \"target\", total_budget)  # print mean value print(mean(approx_ev_survey)) #> [1] 1.224692"},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_near_optimal_survey_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","title":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","text":"Find near optimal survey scheme maximizes value information. function uses approximation method calculating expected value decision given survey scheme, greedy heuristic algorithm maximize metric.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_near_optimal_survey_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","text":"","code":"approx_near_optimal_survey_scheme(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   site_management_cost_column,   site_survey_cost_column,   feature_survey_column,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column,   feature_target_column,   total_budget,   survey_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL,   site_survey_locked_out_column = NULL,   prior_matrix = NULL,   n_approx_replicates = 100,   n_approx_outcomes_per_replicate = 10000,   seed = 500,   n_threads = 1,   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_near_optimal_survey_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. site_survey_cost_column character name column argument  site_data contains costs surveying site. column numeric values equal greater zero. missing (NA) values permitted column. feature_survey_column character name column argument feature_data contains logical (TRUE / FALSE) values indicating feature surveyed planned surveys . Note considering additional features rapidly increase computational burden, recommended consider features specific conservation interest. missing (NA) values permitted column. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. survey_budget numeric maximum expenditure permitted conducting surveys. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked . site_survey_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) selected future surveys (FALSE) . missing (NA) values permitted column. useful sites never considered future surveys (e.g. costly survey, low chance containing target species). Defaults NULL sites locked . prior_matrix numeric matrix containing prior probability feature occupying site. Rows correspond features, columns correspond sites. Defaults NULL prior data calculated automatically using prior_probability_matrix(). n_approx_replicates integer number replicates use approximating expected value calculations. Defaults 100. n_approx_outcomes_per_replicate integer number outcomes use per replicate approximation calculations. Defaults 10000. seed integer state random number generator simulating outcomes conducting value information analyses. Defaults 500. n_threads integer number threads use computation. verbose logical indicating information printed processing. Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_near_optimal_survey_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","text":"matrix logical (TRUE/ FALSE) values indicating site selected scheme . Columns correspond sites, rows correspond different schemes. ties best identified solution, matrix contain single row.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_near_optimal_survey_scheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","text":"Ideally, brute-force algorithm used identify optimal survey scheme. Unfortunately, feasible apply brute-force large problems can take incredibly long time complete. cases, may desirable obtain \"relatively good\" survey scheme greedy heuristic algorithm provided cases. greedy heuristic algorithm – unlike brute force algorithm – guaranteed identify optimal solution – even \"relatively good solution\" matter – though greedy heuristic algorithms tend deliver solutions 15\\ greedy algorithms implemented : Initialize empty list survey scheme solutions, empty list approximate expected values. Calculate expected value current information. Add survey scheme sites selected surveying list survey scheme solutions, add expected value current information list approximate expected values. Set current survey solution survey scheme sites selected surveying. remaining candidate site selected survey, generate new candidate survey scheme candidate site added current survey solution. Calculate approximate expected value new candidate survey scheme. cost given candidate survey scheme exceeds survey budget, store missing NA value instead. Also cost given candidate survey scheme plus management costs locked planning units exceeds total budget, store missing value NA value . new candidate survey schemes associated missing NA values – exceed survey budget – go step 12. Calculate cost effectiveness new candidate survey scheme. calculated difference approximate expected value given new candidate survey scheme current survey solution, dividing difference cost newly selected candidate site. Find new candidate survey scheme associated highest cost-effectiveness value, ignoring missing NA values. new candidate survey scheme now set current survey scheme. Store current survey scheme list survey scheme solutions store approximate expected value list approximate expected values. Go step 12. Find solution list survey scheme solutions highest expected value list approximate expected values return solution.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_near_optimal_survey_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximately near optimal survey scheme — approx_near_optimal_survey_scheme","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation  # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # set total budget for surveying sites for conservation # (i.e. 40% of the cost of managing all sites) survey_budget <- sum(sim_sites$survey_cost) * 0.4  # find survey scheme using approximate method and greedy heuristic algorithm # (using 10 replicates so that this example completes relatively quickly) approx_near_optimal_survey <- approx_near_optimal_survey_scheme(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"management_cost\", \"survey_cost\",   \"survey\", \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\",   \"target\", total_budget, survey_budget)  # print result print(approx_near_optimal_survey) #>       [,1]  [,2]  [,3]  [,4] [,5]  [,6] #> [1,] FALSE FALSE FALSE FALSE TRUE FALSE #> [2,] FALSE FALSE FALSE FALSE TRUE  TRUE #> attr(,\"ev\") #> [1] 1.771926 1.771926"},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximately optimal survey scheme — approx_optimal_survey_scheme","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"Find optimal survey scheme maximizes value information. function uses approximation method calculating expected value decision given survey scheme.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"","code":"approx_optimal_survey_scheme(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   site_management_cost_column,   site_survey_cost_column,   feature_survey_column,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column,   feature_target_column,   total_budget,   survey_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL,   site_survey_locked_out_column = NULL,   prior_matrix = NULL,   n_approx_replicates = 100,   n_approx_outcomes_per_replicate = 10000,   seed = 500,   n_threads = 1,   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. site_survey_cost_column character name column argument  site_data contains costs surveying site. column numeric values equal greater zero. missing (NA) values permitted column. feature_survey_column character name column argument feature_data contains logical (TRUE / FALSE) values indicating feature surveyed planned surveys . Note considering additional features rapidly increase computational burden, recommended consider features specific conservation interest. missing (NA) values permitted column. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. survey_budget numeric maximum expenditure permitted conducting surveys. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked . site_survey_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) selected future surveys (FALSE) . missing (NA) values permitted column. useful sites never considered future surveys (e.g. costly survey, low chance containing target species). Defaults NULL sites locked . prior_matrix numeric matrix containing prior probability feature occupying site. Rows correspond features, columns correspond sites. Defaults NULL prior data calculated automatically using prior_probability_matrix(). n_approx_replicates integer number replicates use approximating expected value calculations. Defaults 100. n_approx_outcomes_per_replicate integer number outcomes use per replicate approximation calculations. Defaults 10000. seed integer state random number generator simulating outcomes conducting value information analyses. Defaults 500. n_threads integer number threads use computation. verbose logical indicating information printed processing. Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"matrix logical (TRUE/ FALSE) values indicating site selected scheme . Columns correspond sites, rows correspond different schemes. one optimal survey scheme matrix contain single row. matrix also numeric \"ev\" attribute contains matrix approximate expected values. Within attribute, row corresponds different survey scheme column corresponds different replicate.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"\"approximately\" optimal survey scheme determined using brute-force algorithm. Initially, feasible (valid) survey schemes identified given survey costs survey budget (using feasible_survey_schemes(). Next, expected value every feasible survey scheme approximated (using approx_evdsi()). Finally, greatest expected value identified, survey schemes share greatest expected value returned. Due nature algorithm, can take long time complete.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"Please note function requires Gurobi optimization software (https://www.gurobi.com/) gurobi R package different sites different survey costs. Installation instruction available online Linux, Windows, Mac OS (see https://support.gurobi.com/hc/en-us/articles/4534161999889----install-Gurobi-Optimizer).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/approx_optimal_survey_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximately optimal survey scheme — approx_optimal_survey_scheme","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation  # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # set total budget for surveying sites for conservation # (i.e. 40% of the cost of surveying all sites) survey_budget <- sum(sim_sites$survey_cost) * 0.4  # \\dontrun{ # find optimal survey scheme using approximate method # (using 10 replicates so that this example completes relatively quickly) approx_opt_survey <- approx_optimal_survey_scheme(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"management_cost\", \"survey_cost\",   \"survey\", \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\",   \"target\", total_budget, survey_budget)  # print result print(approx_opt_survey) #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,] FALSE FALSE FALSE FALSE FALSE FALSE #> attr(,\"ev\") #>        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,21]  [,22]  [,23]  [,24]  [,25]  [,26]  [,27]  [,28]  [,29]  [,30] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,31]  [,32]  [,33]  [,34]  [,35]  [,36]  [,37]  [,38]  [,39]  [,40] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,41]  [,42]  [,43]  [,44]  [,45]  [,46]  [,47]  [,48]  [,49]  [,50] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,51]  [,52]  [,53]  [,54]  [,55]  [,56]  [,57]  [,58]  [,59]  [,60] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,61]  [,62]  [,63]  [,64]  [,65]  [,66]  [,67]  [,68]  [,69]  [,70] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,71]  [,72]  [,73]  [,74]  [,75]  [,76]  [,77]  [,78]  [,79]  [,80] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,81]  [,82]  [,83]  [,84]  [,85]  [,86]  [,87]  [,88]  [,89]  [,90] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 #>       [,91]  [,92]  [,93]  [,94]  [,95]  [,96]  [,97]  [,98]  [,99] [,100] #> [1,] 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 1.7165 # }"},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental diversity survey scheme — env_div_survey_scheme","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"Generate survey scheme maximizing diversity environmental conditions surveyed.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"","code":"env_div_survey_scheme(   site_data,   cost_column,   survey_budget,   env_vars_columns,   method = \"mahalanobis\",   locked_in_column = NULL,   locked_out_column = NULL,   exclude_locked_out = FALSE,   solver = \"auto\",   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"site_data sf::sf() object containing candidate survey sites. cost_column character name column argument argument site_data contains cost surveying site. missing (NA) values permitted. survey_budget numeric vector maximum budgets survey schemes. missing (NA) values permitted. env_vars_columns character vector names columns argument site_data contain numeric environmental variables. missing (NA) values permitted. method character name distance metric use calculating environmental dissimilarity scores. See vegan::vegdist() documentation method parameter available distance metrics information. missing (NA) values permitted. Defaults \"mahalanobis\" Mahalanobis distances. locked_in_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . locked_out_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . exclude_locked_out logical locked planning units entirely excluded optimization process? Defaults FALSE. solver character name optimization solver use generating survey schemes. Available options include: \"Rsymphony\", \"gurobi\" \"auto\". \"auto\" method use Gurobi optimization software available; otherwise, use SYMPHONY software via Rsymphony package. Defaults \"auto\". verbose logical indicating information printed generating survey scheme(s). Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"matrix logical (TRUE/ FALSE) values indicating site selected scheme . Columns correspond sites, rows correspond different schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"integer programming formulation environmental diversity reserve selection problem (Faith & Walker 1996) used generate survey schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"solver","dir":"Reference","previous_headings":"","what":"Solver","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"function can use Rsymphony package Gurobi optimization software generate survey schemes. Although Rsymphony package easier install freely available Comprehensive R Archive Network (CRAN), strongly recommended install Gurobi optimization software gurobi R package can generate survey schemes much faster. Note special academic licenses available cost. Installation instructions available online Linux, Windows, Mac OS operating systems.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"Faith DP & Walker PA (1996) Environmental diversity: best-possible use surrogate data assessing relative biodiversity sets areas. Biodiversity & Conservation, 5, 399–415.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/env_div_survey_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environmental diversity survey scheme — env_div_survey_scheme","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data  x <- sf::st_as_sf(    tibble::tibble(x = rnorm(4), y = rnorm(4),                   v1 = c(0.1, 0.2, 0.3, 10), # environmental axis 1                   v2 = c(0.1, 0.2, 0.3, 10), # environmental axis 2                   cost = rep(1, 4)),     coords = c(\"x\", \"y\"))  # plot the sites' environmental conditions plot(x[, c(\"v1\", \"v2\")], pch = 16, cex = 3)   # generate scheme with a budget of 2 s <- env_div_survey_scheme(x, \"cost\", 2, c(\"v1\", \"v2\"), \"mahalanobis\")  # print scheme print(s) #>       [,1] [,2]  [,3] [,4] #> [1,] FALSE TRUE FALSE TRUE  # plot scheme x$scheme <- c(s) plot(x[, \"scheme\"], pch = 16, cex = 3)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdci.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected value of the decision given current information — evdci","title":"Expected value of the decision given current information — evdci","text":"Calculate expected value management decision given current information. metric describes value management decision expected decision maker limited existing biodiversity data (.e. survey data environmental niche models).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected value of the decision given current information — evdci","text":"","code":"evdci(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   site_management_cost_column,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column,   feature_target_column,   total_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL,   prior_matrix = NULL )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected value of the decision given current information — evdci","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked . prior_matrix numeric matrix containing prior probability feature occupying site. Rows correspond features, columns correspond sites. Defaults NULL prior data calculated automatically using prior_probability_matrix().","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected value of the decision given current information — evdci","text":"numeric value.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected value of the decision given current information — evdci","text":"function calculates expected value use approximation methods. , function can applied small problems.","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected value of the decision given current information — evdci","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation  # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # calculate expected value of management decision given current information # using exact method ev_current <- evdci(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"management_cost\", \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\",   \"target\", total_budget)  # print exact value print(ev_current) #> [1] 1.7165"},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected value of the decision given survey information — evdsi","title":"Expected value of the decision given survey information — evdsi","text":"Calculate expected value management decision given survey information. metric describes value management decision expected decision maker surveys set sites help inform decision.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected value of the decision given survey information — evdsi","text":"","code":"evdsi(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   site_management_cost_column,   site_survey_scheme_column,   site_survey_cost_column,   feature_survey_column,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column,   feature_target_column,   total_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL,   prior_matrix = NULL )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected value of the decision given survey information — evdsi","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. site_survey_scheme_column character name logical (TRUE / FALSE) column argument site_data indicates sites selected scheme . missing NA values permitted. Additionally, sites missing data can selected surveying (per argument site_detection_columns). site_survey_cost_column character name column argument  site_data contains costs surveying site. column numeric values equal greater zero. missing (NA) values permitted column. feature_survey_column character name column argument feature_data contains logical (TRUE / FALSE) values indicating feature surveyed planned surveys . Note considering additional features rapidly increase computational burden, recommended consider features specific conservation interest. missing (NA) values permitted column. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked . prior_matrix numeric matrix containing prior probability feature occupying site. Rows correspond features, columns correspond sites. Defaults NULL prior data calculated automatically using prior_probability_matrix().","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected value of the decision given survey information — evdsi","text":"numeric value.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdsi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected value of the decision given survey information — evdsi","text":"function calculates expected value use approximation methods. , function can applied small problems.","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/evdsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected value of the decision given survey information — evdsi","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation  # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # create a survey scheme that samples the first two sites that # are missing data sim_sites$survey_site <- FALSE sim_sites$survey_site[which(sim_sites$n1 < 0.5)[1:2]] <- TRUE  # calculate expected value of management decision given the survey # information using exact method ev_survey <- evdsi(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"management_cost\", \"survey_site\",   \"survey_cost\", \"survey\", \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\",   \"target\", total_budget)  # print value print(ev_survey) #> [1] 1.224692"},{"path":"https://github.com/prioritizr/surveyvoi/reference/feasible_survey_schemes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all feasible survey schemes — feasible_survey_schemes","title":"Find all feasible survey schemes — feasible_survey_schemes","text":"Generate matrix representing possible different survey schemes given survey costs fixed budget.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/feasible_survey_schemes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all feasible survey schemes — feasible_survey_schemes","text":"","code":"feasible_survey_schemes(   site_data,   cost_column,   survey_budget,   locked_in_column = NULL,   locked_out_column = NULL,   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/feasible_survey_schemes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all feasible survey schemes — feasible_survey_schemes","text":"site_data sf::sf() object containing candidate survey sites. cost_column character name column argument argument site_data contains cost surveying site. missing (NA) values permitted. survey_budget numeric maximum possible expenditure permitted conducting surveys. locked_in_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . locked_out_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . verbose logical indicating information printed searching feasible schemes. Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/feasible_survey_schemes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all feasible survey schemes — feasible_survey_schemes","text":"matrix row corresponds different survey scheme, column corresponds different planning unit. Cell values logical (TRUE / FALSE) indicating given site selected given survey scheme.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/feasible_survey_schemes.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Find all feasible survey schemes — feasible_survey_schemes","text":"Please note function requires Gurobi optimization software (https://www.gurobi.com/) gurobi R package different sites different survey costs. Installation instruction available online Linux, Windows, Mac OS (see https://support.gurobi.com/hc/en-us/articles/4534161999889----install-Gurobi-Optimizer).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/feasible_survey_schemes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all feasible survey schemes — feasible_survey_schemes","text":"","code":"# \\dontrun{ # set seed for reproducibility set.seed(123)  # simulate data x <- sf::st_as_sf(tibble::tibble(x = rnorm(4), y = rnorm(4),                                  cost = c(100, 200, 0.2, 1)),                   coords = c(\"x\", \"y\"))  # print data print(x) #> Simple feature collection with 4 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.5604756 ymin: -1.265061 xmax: 1.558708 ymax: 1.715065 #> CRS:           NA #> # A tibble: 4 × 2 #>    cost               geometry #>   <dbl>                <POINT> #> 1 100   (-0.5604756 0.1292877) #> 2 200    (-0.2301775 1.715065) #> 3   0.2   (1.558708 0.4609162) #> 4   1   (0.07050839 -1.265061)  # plot site locations plot(st_geometry(x), pch = 16, cex = 3)   # generate all feasible schemes given a budget of 4 s <- feasible_survey_schemes(x, \"cost\", survey_budget = 4)  # print schemes print(s) #>       [,1]  [,2]  [,3]  [,4] #> [1,] FALSE FALSE FALSE FALSE #> [2,] FALSE FALSE  TRUE FALSE #> [3,] FALSE FALSE FALSE  TRUE #> [4,] FALSE FALSE  TRUE  TRUE  # plot first scheme x$scheme_1 <- s[1, ] plot(x[, \"scheme_1\"], pch = 16, cex = 3)  # }"},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"Estimate probability occupancy set features set planning units. Models fitted hierarchical generalized linear models account imperfect detection (following Royle & Link 2006) using JAGS (via runjags::run.jags()). limit -fitting, covariate coefficients sampled using Laplace prior distribution (equivalent L1 regularization used machine learning contexts) (Park & Casella 2008).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"","code":"fit_hglm_occupancy_models(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_env_vars_columns,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   jags_n_samples = rep(10000, length(site_detection_columns)),   jags_n_burnin = rep(1000, length(site_detection_columns)),   jags_n_thin = rep(100, length(site_detection_columns)),   jags_n_adapt = rep(1000, length(site_detection_columns)),   jags_n_chains = rep(4, length(site_detection_columns)),   n_folds = rep(5, length(site_detection_columns)),   n_threads = 1,   seed = 500,   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_env_vars_columns character names columns argument site_data contain environmental information fitting updated occupancy models based possible survey outcomes. column correspond different environmental variable, contain numeric, factor, character data. missing (NA) values permitted columns. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. jags_n_samples integer number sample generate per chain MCMC analyses. See documentation sample parameter runjags::run.jags() information). Defaults 10,000 feature. jags_n_burnin integer number warm iterations MCMC analyses. See documentation burnin parameter runjags::run.jags() information). Defaults 10,000 feature. jags_n_thin integer number thinning iterations MCMC analyses. See documentation thin parameter runjags::run.jags() information). Defaults 100 feature. jags_n_adapt integer number adapting iterations MCMC analyses. See documentation adapt parameter runjags::run.jags() information). Defaults 1,000 feature. jags_n_chains integer total number chains MCMC analyses. See documentation n.chains parameter runjags::run.jags() information). Defaults 4 fold feature. n_folds numeric number folds split training data fitting models feature. Defaults 5 feature. n_threads integer number threads use parameter tuning. Defaults 1. seed integer initial random number generator state model fitting. Defaults 500. verbose logical indicating information printed computations. Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"list object containing: models list list objects containing models. predictions tibble::tibble() object containing predictions feature. performance tibble::tibble() object containing performance best models feature. contains following columns: feature name feature. max_mpsrf maximum multi-variate potential scale reduction factor (MPSRF) value models. MPSRF value less 1.05 means coefficients given model converged, value less 1.05 column means models fit given feature successfully converged. train_tss_mean mean TSS statistic models calculated using training data cross-validation. train_tss_std standard deviation TSS statistics models calculated using training data cross-validation. train_sensitivity_mean mean sensitivity statistic models calculated using training data cross-validation. train_sensitivity_std standard deviation sensitivity statistics models calculated using training data cross-validation. train_specificity_mean mean specificity statistic models calculated using training data cross-validation. train_specificity_std standard deviation specificity statistics models calculated using training data cross-validation. test_tss_mean mean TSS statistic models calculated using test data cross-validation. test_tss_std standard deviation TSS statistics models calculated using test data cross-validation. test_sensitivity_mean mean sensitivity statistic models calculated using test data cross-validation. test_sensitivity_std standard deviation sensitivity statistics models calculated using test data cross-validation. test_specificity_mean mean specificity statistic models calculated using test data cross-validation. test_specificity_std standard deviation specificity statistics models calculated using test data cross-validation.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"function () prepares data model fitting, (ii) fits models, (iii) assesses performance models. analyses performed separately feature. given feature: data prepared model fitting partitioning data using k-fold cross-validation (set via argument n_folds). training evaluation folds constructed manner ensure training evaluation fold contains least one presence one absence observation. model fit separately fold (see inst/jags/model.jags model code). assess convergence, multi-variate potential scale reduction factor (MPSRF) statistic calculated model. performance cross-validation models evaluated. Specifically, TSS, sensitivity, specificity statistics calculated (relevant, weighted argument site_weights_data). performance values calculated using models' training evaluation folds. assess convergence, maximum MPSRF statistic models fit feature calculated.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"function requires JAGS software installed. information installing JAGS software, please consult documentation rjags package.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"Park T & Casella G (2008) Bayesian lasso. Journal American Statistical Association, 103: 681–686. Royle JA & Link WA (2006) Generalized site occupancy models allowing false positive false negative errors. Ecology, 87: 835–841.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_hglm_occupancy_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit hierarchical generalized linear models to predict occupancy — fit_hglm_occupancy_models","text":"","code":"# \\dontrun{ # set seeds for reproducibility set.seed(123)  # simulate data for 200 sites, 2 features, and 3 environmental variables site_data <- simulate_site_data(n_sites = 30, n_features = 2, prop = 0.1) feature_data <- simulate_feature_data(n_features = 2, prop = 1)  # print JAGS model code cat(readLines(system.file(\"jags\", \"model.jags\", package = \"surveyvoi\")),     sep = \"\\n\") #> model { #>   # data #>   ## int<lower=1> n_vars #>   ## int<lower=1> train_n_sites #>   ## real sens #>   ## real spec #>   ## real[train_n_sites, n_vars] train_model_matrix #>   ## real[train_n_sites] train_n_obs #>   ## matrix[train_n_sites, max(train_n_obs)] train_obs #>  #>   # priors #>   lambda ~ dunif(0.001, 10)     # regularization parameter #>   coefs[1] ~ dnorm(0, 0.001)    # intercept parameter #>   for (i in 2:n_vars) { #>     coefs[i] ~ ddexp(0, lambda) # covariate parameters #>   } #>  #>   # transformed parameters #>   for (i in 1:train_n_sites) { #>     logit(yhat[i]) <- coefs %*% train_model_matrix[i, ] #>   } #>  #>   # likelihood #>   for (i in 1:train_n_sites) { #>     occ[i] ~ dbern(yhat[i]) #>     for (j in 1:train_n_obs[i]) { #>       train_obs[i, j] ~ dbern((occ[i] * sens) + ((1 - occ[i]) * spec)) #>     } #>   } #> }  # fit models # note that we use a small number of MCMC iterations so that the example # finishes quickly, you probably want to use the defaults for real work results <- fit_hglm_occupancy_models(    site_data, feature_data,    c(\"f1\", \"f2\"), c(\"n1\", \"n2\"), c(\"e1\", \"e2\", \"e3\"),    \"survey_sensitivity\", \"survey_specificity\",    n_folds = rep(5, 2),    jags_n_samples = rep(250, 2), jags_n_burnin = rep(250, 2),    jags_n_thin = rep(1, 2), jags_n_adapt = rep(100, 2),    n_threads = 1) #>    |                                                                               |                                                                      |   0%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:42 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 74 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==                                                                    |   2%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:44 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 67 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |====                                                                  |   5%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:47 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 66 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=====                                                                 |   8%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:48 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=======                                                               |  10%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:50 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 63 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=========                                                             |  12%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:52 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 74 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==========                                                            |  15%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:54 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 67 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |============                                                          |  18%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:56 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 66 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==============                                                        |  20%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:19:58 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |================                                                      |  22%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:00 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 63 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==================                                                    |  25%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:02 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 74 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |===================                                                   |  28%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:03 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 67 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=====================                                                 |  30%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:05 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 66 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=======================                                               |  32%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:07 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |========================                                              |  35%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:09 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 63 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==========================                                            |  38%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:11 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 74 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |============================                                          |  40%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:13 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 67 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==============================                                        |  42%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:14 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 66 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |================================                                      |  45%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:16 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=================================                                     |  48%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:18 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 63 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |===================================                                   |  50%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:20 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 71 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=====================================                                 |  52%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:22 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |======================================                                |  55%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:24 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |========================================                              |  58%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:26 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 68 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==========================================                            |  60%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:27 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 61 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |============================================                          |  62%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:29 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 71 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==============================================                        |  65%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:31 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |===============================================                       |  68%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:33 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=================================================                     |  70%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:35 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 68 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |===================================================                   |  72%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:37 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 61 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |====================================================                  |  75%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:39 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 71 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |======================================================                |  78%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:40 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |========================================================              |  80%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:42 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==========================================================            |  82%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:44 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 68 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |============================================================          |  85%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:46 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 61 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=============================================================         |  88%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:48 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 71 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |===============================================================       |  90%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:50 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |=================================================================     |  92%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:52 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 70 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |==================================================================    |  95%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:53 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 68 #>    Unobserved stochastic nodes: 26 #>    Total graph size: 387 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |====================================================================  |  98%Calling the simulation... #> Welcome to JAGS 4.3.0 on Mon Sep 23 16:20:55 2024 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 61 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 353 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . Updating 250 #> -------------------------------------------------| 250 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Calculating summary statistics... #> Finished running the simulation #>    |                                                                               |======================================================================| 100% #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables.... #> Calculating summary statistics... #> Calculating the Gelman-Rubin statistic for 3 variables....  # print model predictions print(results$predictions) #> # A tibble: 30 × 2 #>          f1           f2 #>       <dbl>        <dbl> #>  1 5.88e- 2 0.948        #>  2 1.00e+ 0 0.00000153   #>  3 5.37e-10 1.00         #>  4 1.00e+ 0 0.0000000615 #>  5 1.00e+ 0 0.0000633    #>  6 3.23e- 3 0.998        #>  7 6.25e- 3 0.881        #>  8 9.97e- 1 0.0608       #>  9 1.89e- 4 0.999        #> 10 2.89e- 1 0.829        #> # ℹ 20 more rows  # print model performance print(results$performance, width = Inf) #> # A tibble: 2 × 14 #>   feature max_mpsrf train_tss_mean train_tss_std train_sensitivity_mean #>   <chr>       <dbl>          <dbl>         <dbl>                  <dbl> #> 1 f1           1.17          0.866        0.0651                  0.958 #> 2 f2           2.57          0.836        0.0812                  0.967 #>   train_sensitivity_std train_specificity_mean train_specificity_std #>                   <dbl>                  <dbl>                 <dbl> #> 1                0.0421                  0.909                0.0371 #> 2                0.0453                  0.869                0.0581 #>   test_tss_mean test_tss_std test_sensitivity_mean test_sensitivity_std #>           <dbl>        <dbl>                 <dbl>                <dbl> #> 1         0.818        0.209                 0.882                0.161 #> 2         0.655        0.222                 0.881                0.163 #>   test_specificity_mean test_specificity_std #>                   <dbl>                <dbl> #> 1                 0.935               0.0926 #> 2                 0.774               0.230  # }"},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_xgb_occupancy_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","title":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","text":"Estimate probability occupancy set features set planning units. Models fitted using gradient boosted trees (via xgboost::xgb.train()).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_xgb_occupancy_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","text":"","code":"fit_xgb_occupancy_models(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_env_vars_columns,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   xgb_tuning_parameters,   xgb_early_stopping_rounds = rep(20, length(site_detection_columns)),   xgb_n_rounds = rep(100, length(site_detection_columns)),   n_folds = rep(5, length(site_detection_columns)),   n_threads = 1,   seed = 500,   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_xgb_occupancy_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_env_vars_columns character names columns argument site_data contain environmental information fitting updated occupancy models based possible survey outcomes. column correspond different environmental variable, contain numeric, factor, character data. missing (NA) values permitted columns. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. xgb_tuning_parameters list object containing candidate parameter values fitting models. Valid parameters include: \"max_depth\", \"eta\", \"lambda\", \"min_child_weight\", \"subsample\", \"colsample_by_tree\", \"objective\". See documentation params argument xgboost::xgb.train() information. xgb_early_stopping_rounds numeric model rounds parameter tuning. See xgboost::xgboost() information. Defaults 10 feature. xgb_n_rounds numeric model rounds model fitting See xgboost::xgboost() information. Defaults 100 feature. n_folds numeric number folds split training data fitting models feature. Defaults 5 feature. n_threads integer number threads use parameter tuning. Defaults 1. seed integer initial random number generator state model fitting. Defaults 500. verbose logical indicating information printed computations. Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_xgb_occupancy_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","text":"list object containing: parameters list list objects containing best tuning parameters feature. predictions tibble::tibble() object containing predictions feature. performance tibble::tibble() object containing performance best models feature. contains following columns: feature name feature. train_tss_mean mean TSS statistic models calculated using training data cross-validation. train_tss_std standard deviation TSS statistics models calculated using training data cross-validation. train_sensitivity_mean mean sensitivity statistic models calculated using training data cross-validation. train_sensitivity_std standard deviation sensitivity statistics models calculated using training data cross-validation. train_specificity_mean mean specificity statistic models calculated using training data cross-validation. train_specificity_std standard deviation specificity statistics models calculated using training data cross-validation. test_tss_mean mean TSS statistic models calculated using test data cross-validation. test_tss_std standard deviation TSS statistics models calculated using test data cross-validation. test_sensitivity_mean mean sensitivity statistic models calculated using test data cross-validation. test_sensitivity_std standard deviation sensitivity statistics models calculated using test data cross-validation. test_specificity_mean mean specificity statistic models calculated using test data cross-validation. test_specificity_std standard deviation specificity statistics models calculated using test data cross-validation.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_xgb_occupancy_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","text":"function () prepares data model fitting, (ii) calibrates tuning parameters model fitting (see xgboost::xgb.train() details tuning parameters), (iii) generate predictions using best found tuning parameters, (iv) assess performance best supported models. analyses performed separately feature. given feature: data prepared model fitting partitioning data using k-fold cross-validation (set via argument n_folds). training evaluation folds constructed manner ensure training evaluation fold contains least one presence one absence observation. grid search method used tune model parameters. candidate values parameter (specified via parameters) used generate full set parameter combinations, parameter combinations subsequently used tuning models. account unbalanced datasets, scale_pos_weight xgboost::xgboost() parameter calculated mean value across training folds (.e. number absence divided number presences per feature). given parameter combination, models fit using k-fold cross- validation (via xgboost::xgb.cv()) – using previously mentioned training evaluation folds – True Skill Statistic (TSS) calculated using data held fold used quantify performance (.e. \"test_tss_mean\" column output). models also fitted using early_stopping_rounds parameter reduce time-spent tuning models. relevant, also fitted using supplied weights (per argument site_weights_data). exploring full set parameter combinations, best parameter combination identified, associated parameter values models stored later use. cross-validation models associated best parameter combination used generate predict average probability feature occupies site. predictions include sites surveyed , also sites surveyed . performance cross-validation models evaluated. Specifically, TSS, sensitivity, specificity statistics calculated (relevant, weighted argument site_weights_data). performance values calculated using models' training evaluation folds.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/fit_xgb_occupancy_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit boosted regression tree models to predict occupancy — fit_xgb_occupancy_models","text":"","code":"# \\dontrun{ # set seeds for reproducibility set.seed(123)  # simulate data for 30 sites, 2 features, and 3 environmental variables site_data <- simulate_site_data(   n_sites = 30, n_features = 2, n_env_vars = 3, prop = 0.1) feature_data <- simulate_feature_data(n_features = 2, prop = 1)  # create list of possible tuning parameters for modeling parameters <- list(eta = seq(0.1, 0.5, length.out = 3),                    lambda = 10 ^ seq(-1.0, 0.0, length.out = 3),                    objective = \"binary:logistic\")  # fit models # note that we use 10 random search iterations here so that the example # finishes quickly, you would probably want something like 1000+ results <- fit_xgb_occupancy_models(    site_data, feature_data,    c(\"f1\", \"f2\"), c(\"n1\", \"n2\"), c(\"e1\", \"e2\", \"e3\"),    \"survey_sensitivity\", \"survey_specificity\",    n_folds = rep(5, 2), xgb_early_stopping_rounds = rep(100, 2),    xgb_tuning_parameters = parameters, n_threads = 1)  # print best found model parameters print(results$parameters) #> [[1]] #> [[1]]$eta #> [1] 0.1 #>  #> [[1]]$lambda #> [1] 0.1 #>  #> [[1]]$objective #> [1] \"binary:logistic\" #>  #> [[1]]$scale_pos_weight #> [[1]]$scale_pos_weight[[1]] #> [1] 1 1 1 1 1 #>  #>  #>  #> [[2]] #> [[2]]$eta #> [1] 0.1 #>  #> [[2]]$lambda #> [1] 0.1 #>  #> [[2]]$objective #> [1] \"binary:logistic\" #>  #> [[2]]$scale_pos_weight #> [[2]]$scale_pos_weight[[1]] #> [1] 1 1 1 1 1 #>  #>  #>   # print model predictions print(results$predictions) #> # A tibble: 30 × 2 #>       f1    f2 #>    <dbl> <dbl> #>  1 0.450 0.635 #>  2 0.549 0.362 #>  3 0.450 0.629 #>  4 0.549 0.362 #>  5 0.539 0.363 #>  6 0.450 0.638 #>  7 0.450 0.373 #>  8 0.549 0.627 #>  9 0.450 0.630 #> 10 0.529 0.557 #> # ℹ 20 more rows  # print model performance print(results$performance, width = Inf) #> # A tibble: 2 × 13 #>   feature train_tss_mean train_tss_std train_sensitivity_mean #>   <chr>            <dbl>         <dbl>                  <dbl> #> 1 f1               1.00         0                        1.00 #> 2 f2               0.976        0.0142                   1.00 #>   train_sensitivity_std train_specificity_mean train_specificity_std #>                   <dbl>                  <dbl>                 <dbl> #> 1                     0                  1.00                 0      #> 2                     0                  0.976                0.0142 #>   test_tss_mean test_tss_std test_sensitivity_mean test_sensitivity_std #>           <dbl>        <dbl>                 <dbl>                <dbl> #> 1         0.607        0.395                 0.839                0.231 #> 2         0.703        0.229                 1.00                 0     #>   test_specificity_mean test_specificity_std #>                   <dbl>                <dbl> #> 1                 0.769                0.265 #> 2                 0.703                0.229 # }"},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic coverage survey scheme — geo_cov_survey_scheme","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"Generate survey scheme maximizing geographic coverage surveys.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"","code":"geo_cov_survey_scheme(   site_data,   cost_column,   survey_budget,   locked_in_column = NULL,   locked_out_column = NULL,   exclude_locked_out = FALSE,   solver = \"auto\",   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"site_data sf::sf() object containing candidate survey sites. cost_column character name column argument argument site_data contains cost surveying site. missing (NA) values permitted. survey_budget numeric vector maximum budgets survey schemes. missing (NA) values permitted. locked_in_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . locked_out_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . exclude_locked_out logical locked planning units entirely excluded optimization process? Defaults FALSE. solver character name optimization solver use generating survey schemes. Available options include: \"Rsymphony\", \"gurobi\" \"auto\". \"auto\" method use Gurobi optimization software available; otherwise, use SYMPHONY software via Rsymphony package. Defaults \"auto\". verbose logical indicating information printed generating survey scheme(s). Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"matrix logical (TRUE/ FALSE) values indicating site selected scheme . Columns correspond sites, rows correspond different schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"integer programming formulation p-Median problem (Daskin & Maass 2015) used generate survey schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"solver","dir":"Reference","previous_headings":"","what":"Solver","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"function can use Rsymphony package Gurobi optimization software generate survey schemes. Although Rsymphony package easier install freely available Comprehensive R Archive Network (CRAN), strongly recommended install Gurobi optimization software gurobi R package can generate survey schemes much faster. Note special academic licenses available cost. Installation instructions available online Linux, Windows, Mac OS operating systems.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"Daskin MS & Maass KL (2015) p-median problem. Location Science (pp. 21-45). Springer, Cham.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/geo_cov_survey_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic coverage survey scheme — geo_cov_survey_scheme","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data  x <- sf::st_as_sf(    tibble::tibble(x = rnorm(4), y = rnorm(4),                   v1 = c(0.1, 0.2, 0.3, 10), # environmental axis 1                   v2 = c(0.1, 0.2, 0.3, 10), # environmental axis 2                   cost = rep(1, 4)),     coords = c(\"x\", \"y\"))  # plot the sites' locations plot(st_geometry(x), pch = 16, cex = 3)   # generate scheme with a budget of 2 s <- geo_cov_survey_scheme(x, \"cost\", 2)  # print scheme print(s) #>      [,1]  [,2] [,3]  [,4] #> [1,] TRUE FALSE TRUE FALSE  # plot scheme x$scheme <- c(s) plot(x[, \"scheme\"], pch = 16, cex = 3)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/greedy_heuristic_prioritization.html","id":null,"dir":"Reference","previous_headings":"","what":"Greedy heuristic prioritization — greedy_heuristic_prioritization","title":"Greedy heuristic prioritization — greedy_heuristic_prioritization","text":"Generate prioritization protected area establishment.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/greedy_heuristic_prioritization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Greedy heuristic prioritization — greedy_heuristic_prioritization","text":"","code":"greedy_heuristic_prioritization(   site_data,   feature_data,   site_probability_columns,   site_management_cost_column,   feature_target_column,   total_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/greedy_heuristic_prioritization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Greedy heuristic prioritization — greedy_heuristic_prioritization","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked .","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/greedy_heuristic_prioritization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Greedy heuristic prioritization — greedy_heuristic_prioritization","text":"list containing following elements: x logical vector indicating site selected protection . objval numeric value denoting objective value prioritization.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/greedy_heuristic_prioritization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Greedy heuristic prioritization — greedy_heuristic_prioritization","text":"prioritization generated using greedy heuristic algorithm. objective function algorithm calculated : () estimating probability species meets target, (ii) calculating sum probabilities. Note function underpins value information calculations used assess potential management decision given updated information presence particular species particular sites.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/greedy_heuristic_prioritization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Greedy heuristic prioritization — greedy_heuristic_prioritization","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation  # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # generate reserve selection prioritization results <- greedy_heuristic_prioritization(   sim_sites, sim_features,   c(\"p1\", \"p2\", \"p3\"),   \"management_cost\",   \"target\",   total_budget )  # print results print(results) #> $x #> [1]  TRUE FALSE FALSE  TRUE  TRUE FALSE #>  #> $objval #> [1] 0.982308 #>"},{"path":"https://github.com/prioritizr/surveyvoi/reference/n_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of states — n_states","title":"Number of states — n_states","text":"Calculate total number presence/absence states given number sites features.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/n_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of states — n_states","text":"","code":"n_states(n_sites, n_features)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/n_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of states — n_states","text":"n_sites numeric number sites. n_features numeric number features.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/n_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of states — n_states","text":"numeric value.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/n_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of states — n_states","text":"","code":"# calculate number of states for 3 sites and 2 features n_states(n_sites = 2, n_features = 3) #> [1] 64"},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal survey scheme — optimal_survey_scheme","title":"Optimal survey scheme — optimal_survey_scheme","text":"Find optimal survey scheme maximizes value information. function uses exact method calculating expected value decision given survey scheme.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal survey scheme — optimal_survey_scheme","text":"","code":"optimal_survey_scheme(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   site_management_cost_column,   site_survey_cost_column,   feature_survey_column,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column,   feature_target_column,   total_budget,   survey_budget,   site_management_locked_in_column = NULL,   site_management_locked_out_column = NULL,   site_survey_locked_out_column = NULL,   prior_matrix = NULL,   n_threads = 1,   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal survey scheme — optimal_survey_scheme","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. site_management_cost_column character name column argument site_data contains costs managing site conservation. column numeric values equal greater zero. missing (NA) values permitted column. site_survey_cost_column character name column argument  site_data contains costs surveying site. column numeric values equal greater zero. missing (NA) values permitted column. feature_survey_column character name column argument feature_data contains logical (TRUE / FALSE) values indicating feature surveyed planned surveys . Note considering additional features rapidly increase computational burden, recommended consider features specific conservation interest. missing (NA) values permitted column. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_target_column character name column argument feature_data contains \\(target\\) values used parametrize conservation benefit managing feature. column numeric values equal greater zero. missing (NA) values permitted column. total_budget numeric maximum expenditure permitted conducting surveys managing sites conservation. survey_budget numeric maximum expenditure permitted conducting surveys. site_management_locked_in_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites already earmarked conservation, sites already managed conservation. Defaults NULL sites locked . site_management_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) managed conservation (FALSE) . missing (NA) values permitted column. useful sites potentially surveyed improve model predictions even managed conservation. Defaults NULL sites locked . site_survey_locked_out_column character name column argument site_data contains logical (TRUE / FALSE) values indicating sites locked (TRUE) selected future surveys (FALSE) . missing (NA) values permitted column. useful sites never considered future surveys (e.g. costly survey, low chance containing target species). Defaults NULL sites locked . prior_matrix numeric matrix containing prior probability feature occupying site. Rows correspond features, columns correspond sites. Defaults NULL prior data calculated automatically using prior_probability_matrix(). n_threads integer number threads use computation. verbose logical indicating information printed processing. Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal survey scheme — optimal_survey_scheme","text":"matrix logical (TRUE/ FALSE) values indicating site selected scheme . Columns correspond sites, rows correspond different schemes. one optimal survey scheme matrix contain single row. matrix also numeric \"ev\" attribute contains expected value scheme.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimal survey scheme — optimal_survey_scheme","text":"optimal survey scheme determined using brute-force algorithm. Initially, feasible (valid) survey schemes identified given survey costs survey budget (using feasible_survey_schemes(). Next, expected value every feasible survey scheme computed (using evdsi()). Finally, greatest expected value identified, survey schemes share greatest expected value returned. Due nature algorithm, can take long time complete.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Optimal survey scheme — optimal_survey_scheme","text":"Please note function requires Gurobi optimization software (https://www.gurobi.com/) gurobi R package different sites different survey costs. Installation instruction available online Linux, Windows, Mac OS (see https://support.gurobi.com/hc/en-us/articles/4534161999889----install-Gurobi-Optimizer).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/optimal_survey_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal survey scheme — optimal_survey_scheme","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # set total budget for managing sites for conservation # (i.e. 50% of the cost of managing all sites) total_budget <- sum(sim_sites$management_cost) * 0.5  # set total budget for surveying sites for conservation # (i.e. 40% of the cost of managing all sites) survey_budget <- sum(sim_sites$survey_cost) * 0.4  # \\dontrun{ # find optimal survey scheme using exact method opt_survey <- optimal_survey_scheme(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"management_cost\", \"survey_cost\",   \"survey\", \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\",   \"target\", total_budget, survey_budget)  # print result print(opt_survey) #>      [,1]  [,2]  [,3]  [,4] [,5]  [,6] #> [1,] TRUE FALSE FALSE FALSE TRUE FALSE #> attr(,\"ev\") #> [1] 1.812399 # }"},{"path":"https://github.com/prioritizr/surveyvoi/reference/prior_probability_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior probability matrix — prior_probability_matrix","title":"Prior probability matrix — prior_probability_matrix","text":"Create prior probability matrix value information analysis.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/prior_probability_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior probability matrix — prior_probability_matrix","text":"","code":"prior_probability_matrix(   site_data,   feature_data,   site_detection_columns,   site_n_surveys_columns,   site_probability_columns,   feature_survey_sensitivity_column,   feature_survey_specificity_column,   feature_model_sensitivity_column,   feature_model_specificity_column )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/prior_probability_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior probability matrix — prior_probability_matrix","text":"site_data sf::sf() object site data. feature_data base::data.frame() object feature data. site_detection_columns character names numeric columns argument site_data contain proportion surveys conducted within site detected feature. column correspond different feature, contain proportion value (zero one). site previously surveyed, value zero used. site_n_surveys_columns character names numeric columns argument site_data contain total number surveys conducted feature within site. column correspond different feature, contain non-negative integer number (e.g. 0, 1, 2, 3). site previously surveyed, value zero used. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns. feature_survey_sensitivity_column character name column argument feature_data contains probability future surveys correctly detecting presence feature given site (.e. sensitivity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_survey_specificity_column character name column argument feature_data contains probability future surveys correctly detecting absence feature given site (.e. specificity survey methodology). column numeric values zero one. missing (NA) values permitted column. feature_model_sensitivity_column character name column argument feature_data contains probability initial models correctly predicting presence feature given site (.e. sensitivity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models(). feature_model_specificity_column character name column argument feature_data contains probability initial models correctly predicting absence feature given site (.e. specificity models). column numeric values zero one. missing (NA) values permitted column. ideally calculated using fit_xgb_occupancy_models() fit_hglm_occupancy_models().","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/prior_probability_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior probability matrix — prior_probability_matrix","text":"matrix object containing prior probabilities feature occupying site. row corresponds different feature column corresponds different site.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/prior_probability_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior probability matrix — prior_probability_matrix","text":"","code":"# set seeds for reproducibility set.seed(123)  # load example site data data(sim_sites) print(sim_sites) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #> # ℹ 4 more variables: p1 <dbl>, p2 <dbl>, p3 <dbl>, geometry <POINT>  # load example feature data data(sim_features) print(sim_features) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #> # ℹ 2 more variables: model_specificity <dbl>, target <dbl>  # calculate prior probability matrix prior_matrix <- prior_probability_matrix(   sim_sites, sim_features,   c(\"f1\", \"f2\", \"f3\"), c(\"n1\", \"n2\", \"n3\"), c(\"p1\", \"p2\", \"p3\"),   \"survey_sensitivity\", \"survey_specificity\",   \"model_sensitivity\", \"model_specificity\")  # preview prior probability matrix print(prior_matrix) #>         [,1]         [,2]      [,3]      [,4]      [,5]      [,6] #> f1 0.8173204 1.079836e-05 0.8673022 0.2554465 0.2554465 0.8173204 #> f2 0.7883133 9.991649e-01 0.8546773 0.2567227 0.2567227 0.7883133 #> f3 0.2077566 2.583338e-05 0.0168493 0.8563573 0.8563573 0.2077566"},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_richness_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative site richness scores — relative_site_richness_scores","title":"Relative site richness scores — relative_site_richness_scores","text":"Calculate relative site richness scores. Sites greater scores predicted likely contain species. Note scores relative scores calculated using different matrices compared .","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_richness_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative site richness scores — relative_site_richness_scores","text":"","code":"relative_site_richness_scores(site_data, site_probability_columns)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_richness_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative site richness scores — relative_site_richness_scores","text":"site_data sf::sf() object site data. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_richness_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative site richness scores — relative_site_richness_scores","text":"numeric vector richness scores. Note values automatically rescaled 0.01 1.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_richness_scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative site richness scores — relative_site_richness_scores","text":"relative site richness scores calculated using following procedure: Let \\(J\\) denote set sites (indexed \\(j\\)), \\(\\) denote set features (indexed \\(\\)), \\(x_{ij}\\) denote modeled probability feature \\(\\\\) occurring sites \\(j \\J\\). Next, sum values site: \\(y_j = \\sum_{\\} x_{ij}\\). Finally, linearly rescale \\(y_j\\) values 0.01 1 produce scores.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_richness_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative site richness scores — relative_site_richness_scores","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data for 3 features and 4 planning units x <- tibble::tibble(x = rnorm(4), y = rnorm(4),                      p1 = c(0.095, 0.032, 0.5, 0.924),                      p2 = c(0.023, 0.014, 0.4, 0.919),                      p3 = c(0.075, 0.046, 0.9, 0.977)) x <- sf::st_as_sf(x, coords = c(\"x\", \"y\"))  # print data, # we can see that the fourth site has the highest modeled probabilities of # occupancy across all species print(x) #> Simple feature collection with 4 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.5604756 ymin: -1.265061 xmax: 1.558708 ymax: 1.715065 #> CRS:           NA #> # A tibble: 4 × 4 #>      p1    p2    p3               geometry #>   <dbl> <dbl> <dbl>                <POINT> #> 1 0.095 0.023 0.075 (-0.5604756 0.1292877) #> 2 0.032 0.014 0.046  (-0.2301775 1.715065) #> 3 0.5   0.4   0.9     (1.558708 0.4609162) #> 4 0.924 0.919 0.977 (0.07050839 -1.265061)  # plot sites' occupancy probabilities plot(x[, c(\"p1\", \"p2\", \"p3\")], pch = 16, cex = 3)   # calculate scores s <- relative_site_richness_scores(x, c(\"p1\", \"p2\", \"p3\"))  # print scores, # we can see that site 4 has the highest richness score print(s) #> [1] 0.04665323 0.01000000 0.62983871 1.00000000  # plot sites' richness scores x$s <- s plot(x[, c(\"s\")], pch = 16, cex = 3)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_uncertainty_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative site uncertainty scores — relative_site_uncertainty_scores","title":"Relative site uncertainty scores — relative_site_uncertainty_scores","text":"Calculate scores describe overall uncertainty modeled species' occupancy predictions site. Sites greater scores associated greater uncertainty. Note scores relative uncertainty values calculated using different matrices compared .","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_uncertainty_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative site uncertainty scores — relative_site_uncertainty_scores","text":"","code":"relative_site_uncertainty_scores(site_data, site_probability_columns)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_uncertainty_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative site uncertainty scores — relative_site_uncertainty_scores","text":"site_data sf::sf() object site data. site_probability_columns character names numeric columns argument site_data contain modeled probabilities occupancy feature site. column correspond different feature, contain probability data (values zero one). missing (NA) values permitted columns.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_uncertainty_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative site uncertainty scores — relative_site_uncertainty_scores","text":"numeric vector uncertainty scores. Note values automatically rescaled 0.01 1.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_uncertainty_scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative site uncertainty scores — relative_site_uncertainty_scores","text":"relative site uncertainty scores calculated joint Shannon's entropy statistics. Since assume species occur independently , can calculate statistics separately species site sum together statistics species site: Let \\(J\\) denote set sites (indexed \\(j\\)), \\(\\) denote set features (indexed \\(\\)), \\(x_{ij}\\) denote modeled probability feature \\(\\\\) occurring sites \\(j \\J\\). Next, calculate Shannon's entropy statistic species site: \\(y_{ij} = - \\big( (x_ij \\mathit{log}_2 x_{ij}) + (1 - x_ij \\mathit{log}_2 1 - x_{ij}) \\big) \\) Finally, sum entropy statistics together site: \\(s_{j} = \\sum_{\\} y_{ij}\\)","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/relative_site_uncertainty_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative site uncertainty scores — relative_site_uncertainty_scores","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data for 3 features and 5 sites x <- tibble::tibble(x = rnorm(5), y = rnorm(5),                     p1 = c(0.5, 0, 1, 0, 1),                     p2 = c(0.5, 0.5, 1, 0, 1),                     p3 = c(0.5, 0.5, 0.5, 0, 1)) x <- sf::st_as_sf(x, coords = c(\"x\", \"y\"))  # print data, # we can see that site (row) 3 has the least certain predictions # because it has many values close to 0.5 print(x) #> Simple feature collection with 5 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.5604756 ymin: -1.265061 xmax: 1.558708 ymax: 1.715065 #> CRS:           NA #> # A tibble: 5 × 4 #>      p1    p2    p3                geometry #>   <dbl> <dbl> <dbl>                 <POINT> #> 1   0.5   0.5   0.5   (-0.5604756 1.715065) #> 2   0     0.5   0.5  (-0.2301775 0.4609162) #> 3   1     1     0.5    (1.558708 -1.265061) #> 4   0     0     0   (0.07050839 -0.6868529) #> 5   1     1     1     (0.1292877 -0.445662)  # plot sites' occupancy probabilities plot(x[, c(\"p1\", \"p2\", \"p3\")], pch = 16, cex = 3)   # calculate scores s <- relative_site_uncertainty_scores(x, c(\"p1\", \"p2\", \"p3\"))  # print scores, # we can see that site 3 has the highest uncertainty score print(s) #> [1] 3 2 1 0 0  # plot sites' uncertainty scores x$s <- s plot(x[, c(\"s\")], pch = 16, cex = 3)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated datasets — sim_data","title":"Simulated datasets — sim_data","text":"Simulated data prioritizing sites ecological surveys.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated datasets — sim_data","text":"","code":"data(sim_features)  data(sim_sites)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/sim_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated datasets — sim_data","text":"sim_sites sf::sf() object. sim_features tibble::tibble() object. .","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/sim_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated datasets — sim_data","text":"simulated datasets provide data six sites three features. sites can potentially acquired protected area establishment. However, existing information spatial distribution features incomplete. sites existing ecological survey data. help inform management decisions, species distribution models fitted predict probability species occupying site. sim_sites object describes sites contains following data: cost surveying sites (survey_cost column), cost acquiring sites conservation (management_cost column), results previous ecological surveys (f1, f2, f3 columns), previous survey effort (n1, n2, n3 columns), environmental conditions sites (e1, e2 columns), modeled probability features occupying sites (p1, p2, p3 columns). sim_features object describes features contains following data: name feature (name column), whether feature considered future surveys (survey column), sensitivity specificity survey methodology sensitivity specificity species distribution model feature (model_sensitivity, model_specificity columns), representation target thresholds feature (target column).","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/sim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated datasets — sim_data","text":"","code":"# load data data(sim_sites, sim_features)  # print feature data print(sim_features, width = Inf) #> # A tibble: 3 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    TRUE                0.951              0.854             0.711 #> 2 f2    TRUE                0.990              0.832             0.722 #> 3 f3    TRUE                0.986              0.808             0.772 #>   model_specificity target #>               <dbl>  <dbl> #> 1             0.841      2 #> 2             0.806      2 #> 3             0.871      2 # print site data print(sim_sites, width = Inf) #> Simple feature collection with 6 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.02541313 ymin: 0.07851093 xmax: 0.9888107 ymax: 0.717068 #> CRS:           NA #> # A tibble: 6 × 14 #>   survey_cost management_cost    f1    f2    f3    n1    n2    n3     e1     e2 #>         <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl> #> 1          19              99     0     0  0        0     0     0  1.13   0.535 #> 2          22              87     0     1  0.25     4     4     4 -1.37  -1.45  #> 3          13              94     1     1  0        1     1     1  0.155 -0.867 #> 4          19              61     0     0  0        0     0     0 -0.792  1.32  #> 5           9             105     0     0  0        0     0     0 -0.194  0.238 #> 6          12             136     0     0  0        0     0     0  1.07   0.220 #>      p1    p2    p3               geometry #>   <dbl> <dbl> <dbl>                <POINT> #> 1 0.999 0.988 0.21   (0.03529733 0.544939) #> 2 0.001 0.995 0.152    (0.33276 0.3174416) #> 3 0.966 1     0.017 (0.6141922 0.07851093) #> 4 0     0     1     (0.02541313 0.1147132) #> 5 0.11  0.006 0.831  (0.9888107 0.2152785) #> 6 1     1     0.082   (0.9038749 0.717068)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_feature_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate feature data — simulate_feature_data","title":"Simulate feature data — simulate_feature_data","text":"Simulate feature data developing simulated survey schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_feature_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate feature data — simulate_feature_data","text":"","code":"simulate_feature_data(n_features, proportion_of_survey_features = 1)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_feature_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate feature data — simulate_feature_data","text":"n_features integer number features. proportion_of_survey_features numeric proportion features examined new surveys. Values must zero one. Defaults 1 features surveyed.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_feature_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate feature data — simulate_feature_data","text":"tibble::tibble() object. contains following data: name character name feature. survey logical (TRUE / FALSE) values indicating feature examined surveys . survey_sensitivity numeric sensitivity (true positive rate) survey methodology features. survey_specificity numeric specificity (true negative rate) survey methodology features. model_sensitivity numeric specificity (true positive rate) occupancy models features. model_specificity numeric specificity (true negative rate) occupancy models features. target numeric target values used parametrize conservation benefit managing feature (defaults 1).","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_feature_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate feature data — simulate_feature_data","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data d <- simulate_feature_data(n_features = 5,                            proportion_of_survey_features = 0.5) # print data print(d, width = Inf) #> # A tibble: 5 × 7 #>   name  survey survey_sensitivity survey_specificity model_sensitivity #>   <chr> <lgl>               <dbl>              <dbl>             <dbl> #> 1 f1    FALSE               0.952              0.896             0.790 #> 2 f2    TRUE                0.971              0.845             0.725 #> 3 f3    TRUE                0.986              0.868             0.704 #> 4 f4    FALSE               0.972              0.857             0.733 #> 5 f5    TRUE                0.968              0.810             0.795 #>   model_specificity target #>               <dbl>  <dbl> #> 1             0.889      1 #> 2             0.869      1 #> 3             0.864      1 #> 4             0.899      1 #> 5             0.866      1"},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_site_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate site data — simulate_site_data","title":"Simulate site data — simulate_site_data","text":"Simulate site data developing simulated survey schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_site_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate site data — simulate_site_data","text":"","code":"simulate_site_data(   n_sites,   n_features,   proportion_of_sites_missing_data,   n_env_vars = 3,   survey_cost_intensity = 20,   survey_cost_scale = 5,   management_cost_intensity = 100,   management_cost_scale = 30,   max_number_surveys_per_site = 5,   output_probabilities = TRUE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_site_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate site data — simulate_site_data","text":"n_sites integer number sites. n_features integer number features. proportion_of_sites_missing_data numeric proportion sites existing presence/absence data. Values must zero one. n_env_vars integer number environmental variables simulating feature distributions. Defaults 3. survey_cost_intensity numeric intensity costs surveying sites. Larger values correspond larger costs average. Defaults 20. survey_cost_scale numeric value corresponding spatial homogeneity survey costs. Defaults 5. management_cost_intensity numeric intensity costs average cost managing sites conservation. Defaults 100. management_cost_scale numeric value corresponding spatial homogeneity survey costs. Defaults 30. max_number_surveys_per_site integer maximum number surveys per site simulated data. Defaults 5. output_probabilities logical value indicating probability values occupancy output . Defaults TRUE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_site_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate site data — simulate_site_data","text":"sf::sf() object site data. \"management_cost\" column contains site protection costs, \"survey_cost\" column contains costs surveying site. Additionally, columns start () \"f\" (e.g. \"f1\") contain proportion times feature detected site, (ii) \"n\" (e.g. \"n1\") contain number surveys feature within site, (iii) \"p\" (e.g. \"p1\") contain prior probability data,  (iv) \"e\" (e.g. \"e1\") contain environmental data. Note columns contain integer value (excepting environmental data columns) correspond feature (e.g. \"d1\", \"n1\", \"p1\" contain data correspond feature).","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/simulate_site_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate site data — simulate_site_data","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data d <- simulate_site_data(n_sites = 10, n_features = 4, prop = 0.5)  # print data print(d, width = Inf) #> Simple feature collection with 10 features and 17 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.0455565 ymin: 0.04205953 xmax: 0.9404673 ymax: 0.9568333 #> CRS:           NA #> # A tibble: 10 × 18 #>    survey_cost management_cost    f1    f2    f3    f4    n1    n2    n3    n4 #>          <dbl>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1          26              68     1     0     0   1       3     3     3     3 #>  2          22              93     0     0     0   0       0     0     0     0 #>  3          23              69     1     0     0   1       1     1     1     1 #>  4          22              78     1     0     0   1       3     3     3     3 #>  5          18              81     0     0     0   0       0     0     0     0 #>  6          30              49     0     0     1   1       2     2     2     2 #>  7          23             125     0     0     0   0       0     0     0     0 #>  8          11             103     0     0     0   0       0     0     0     0 #>  9          25              68     0     0     0   0       0     0     0     0 #> 10          21             137     1     0     0   0.4     5     5     5     5 #>        e1      e2      e3    p1    p2    p3    p4              geometry #>     <dbl>   <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl>               <POINT> #>  1 -0.145 -0.995  -0.223  0.998 0.004 0.091 0.993 (0.2875775 0.9568333) #>  2  0.884  0.0440  0.0843 0.949 0.113 0.074 0     (0.7883051 0.4533342) #>  3  0.794 -0.627  -0.637  0.957 0     0.134 0.993 (0.4089769 0.6775706) #>  4  0.297 -0.540  -0.402  0.929 0     0.24  0.992 (0.8830174 0.5726334) #>  5 -1.45   1.65    1.21   0     1     0.994 0     (0.9404673 0.1029247) #>  6 -1.45  -1.13   -1.22   0.024 0     0.99  1      (0.0455565 0.899825) #>  7  0.878  0.222   0.312  0.956 0.894 0.059 0     (0.5281055 0.2460877) #>  8 -1.23   1.42    2.08   0.35  1     0.555 0     (0.892419 0.04205953) #>  9  0.731  0.761  -0.990  0     0     0.991 1      (0.551435 0.3279207) #> 10  0.685 -0.814  -0.211  0.999 0     0.02  0.117 (0.4566147 0.9545036)  # plot cost data plot(d[, c(\"survey_cost\", \"management_cost\")], axes = TRUE, pch = 16,      cex = 2)   # plot environmental data plot(d[, c(\"e1\", \"e2\", \"e3\")], axes = TRUE, pch = 16, cex = 2)   # plot feature detection data plot(d[, c(\"f1\", \"f2\", \"f3\", \"f4\")], axes = TRUE, pch = 16, cex = 2)   # plot feature survey effort plot(d[, c(\"n1\", \"n2\", \"n3\", \"n4\")], axes = TRUE, pch = 16, cex = 2)   # plot feature prior probability data plot(d[, c(\"p1\", \"p2\", \"p3\", \"p4\")], axes = TRUE, pch = 16, cex = 2)"},{"path":"https://github.com/prioritizr/surveyvoi/reference/surveyvoi.html","id":null,"dir":"Reference","previous_headings":"","what":"surveyvoi: Survey Value of Information — surveyvoi","title":"surveyvoi: Survey Value of Information — surveyvoi","text":"Decision support tool prioritizing sites ecological surveys based potential improve plans conserving biodiversity (e.g. plans establishing protected areas). Given set sites potentially acquired conservation management – wherein sites previously surveyed sites – can used generate evaluate plans additional surveys. Specifically, plans ecological surveys can generated using various conventional approaches (e.g. maximizing expected species richness, geographic coverage, diversity sampled environmental conditions) maximizing value information. generating plans surveys, can also evaluated using value information analysis.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/surveyvoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"surveyvoi: Survey Value of Information — surveyvoi","text":"Please note several functions depend 'Gurobi' optimization software (available https://www.gurobi.com) gurobi R package (installation instructions available online Linux, Windows, Mac OS). Additionally, JAGS software (available https://mcmc-jags.sourceforge.io/) required fit hierarchical generalized linear models.","code":""},{"path":[]},{"path":"https://github.com/prioritizr/surveyvoi/reference/surveyvoi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"surveyvoi: Survey Value of Information — surveyvoi","text":"Package authors: Jeffrey O. Hanson jeffrey.hanson@uqconnect.edu.au ORCID Iadine Chadès iadine.chades@csiro.au ORCID Emma J. Hudgins emma.hudgins@mail.mcgill.ca ORCID Joseph R. Bennett joseph.bennett@carleton.ca ORCID","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted survey scheme — weighted_survey_scheme","title":"Weighted survey scheme — weighted_survey_scheme","text":"Generate survey scheme selecting set sites greatest overall weight value, maximum budget survey scheme.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted survey scheme — weighted_survey_scheme","text":"","code":"weighted_survey_scheme(   site_data,   cost_column,   survey_budget,   weight_column,   locked_in_column = NULL,   locked_out_column = NULL,   solver = \"auto\",   verbose = FALSE )"},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted survey scheme — weighted_survey_scheme","text":"site_data sf::sf() object containing candidate survey sites. cost_column character name column argument argument site_data contains cost surveying site. missing (NA) values permitted. survey_budget numeric vector maximum budgets survey schemes. missing (NA) values permitted. weight_column character name column argument site_data weights site. locked_in_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . locked_out_column character (optional) name column argument site_data contains logical (TRUE/ FALSE) values indicating certain sites locked survey scheme. missing (NA) values permitted. Defaults NULL sites locked . solver character name optimization solver use generating survey schemes. Available options include: \"Rsymphony\", \"gurobi\" \"auto\". \"auto\" method use Gurobi optimization software available; otherwise, use SYMPHONY software via Rsymphony package. Defaults \"auto\". verbose logical indicating information printed generating survey scheme(s). Defaults FALSE.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted survey scheme — weighted_survey_scheme","text":"matrix logical (TRUE/ FALSE) values indicating site selected scheme . Columns correspond sites, rows correspond different schemes.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted survey scheme — weighted_survey_scheme","text":"Let \\(J\\) denote set sites (indexed \\(j\\)), let \\(b\\) denote maximum budget available surveying sites. Next, let \\(c_j\\) represent cost surveying site \\(j \\J\\), \\(w_j\\) denote relative value (weight) surveying site \\(j \\J\\). set sites greatest overall weight values, subject given budget can identified solving following integer programming problem. , \\(x_j\\) binary decision variable indicating site selected survey scheme . $$\\mathit{Maximize} \\space \\sum_{j \\J} x_j w_i \\\\   \\mathit{subject \\space } \\\\   \\sum_{j \\J} x_j c_j \\leq b$$","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":"solver","dir":"Reference","previous_headings":"","what":"Solver","title":"Weighted survey scheme — weighted_survey_scheme","text":"function can use Rsymphony package Gurobi optimization software generate survey schemes. Although Rsymphony package easier install freely available Comprehensive R Archive Network (CRAN), strongly recommended install Gurobi optimization software gurobi R package can generate survey schemes much faster. Note special academic licenses available cost. Installation instructions available online Linux, Windows, Mac OS operating systems.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/reference/weighted_survey_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted survey scheme — weighted_survey_scheme","text":"","code":"# set seed for reproducibility set.seed(123)  # simulate data x <- sf::st_as_sf(   tibble::tibble(x = rnorm(4), y = rnorm(4),                  w = c(0.01, 10, 8, 1),                  cost = c(1, 1, 1, 1)),   coords = c(\"x\", \"y\"))  # plot site' locations and color by weight values plot(x[, \"w\"], pch = 16, cex = 3)   # generate scheme without any sites locked in s <- weighted_survey_scheme(x, cost_column = \"cost\", survey_budget = 2,                              weight_column = \"w\")  # print solution print(s) #>       [,1] [,2] [,3]  [,4] #> [1,] FALSE TRUE TRUE FALSE  # plot solution x$s <- c(s) plot(x[, \"s\"], pch = 16, cex = 3)"},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1102","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.1.0.2","title":"surveyvoi 1.1.0.2","text":"Fix bug fit_xgb_occupancy_models() caused error model fitting due failed predictions. Fix package citation.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1101","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.1.0.1","title":"surveyvoi 1.1.0.1","text":"Fix bug greedy_heuristic_algorithm() function returns solution possible select enough planning units meet target species. Instead throwing error, now throw warning return solution containing cheapest set planning units within budget locked constraints. Note solution objective value zero, zero probability meeting species’ targets.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1100","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.1.0.0","title":"surveyvoi 1.1.0.0","text":"New greedy_heuristic_algorithm() function can used generate reserve selection prioritizations. function provides access internal algorithm used reserve selection component value information calculations. Update internal greedy reserve selection algorithm find better quality prioritizations. impacts approx_near_optimal_survey_scheme(), approx_optimal_survey_scheme(), optimal_survey_scheme(), approx_evdsi(), evdsi(), evdci(). Update sim_sites sim_features example datasets. Fix bug approx_near_optimal_survey_scheme(), approx_optimal_survey_scheme(), optimal_survey_scheme(), approx_evdsi(), evdsi(), evdci() species incorrectly assigned target first species calculations.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-106","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.6","title":"surveyvoi 1.0.6","text":"CRAN release: 2024-02-16 Fix installation Windows arm64 (#50). Fix aliasing package overview help file (#49). Remove CXX specification Makevars avoid NOTEs package checks.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1051","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.5.1","title":"surveyvoi 1.0.5.1","text":"Update citation.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-105","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.5","title":"surveyvoi 1.0.5","text":"CRAN release: 2022-09-17 CRAN release. Skip tests Fedora systems unable reproduce error CRAN. Fix compiler warning thrown installation. Fix compatibility issues upcoming Matrix package (version >= 1.4-2) . Fix issues unloading package properly. Update citation information README.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-104","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.4","title":"surveyvoi 1.0.4","text":"CRAN release: 2022-08-26 CRAN release.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-10312","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.12","title":"surveyvoi 1.0.3.12","text":"Update CRAN comments document remove pkg-config system requirements. Fix compiler warning thrown installation.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-10311","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.11","title":"surveyvoi 1.0.3.11","text":"Update simulate_site_data() function remove RandomFields package dependency.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-10310","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.10","title":"surveyvoi 1.0.3.10","text":"Fix CRAN note utils package dependency. Skip unit tests require RandomFields package Windows avoid spurious failures.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1039","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.9","title":"surveyvoi 1.0.3.9","text":"Update documentation new code repository location. Add remote RandomFields package facilitate installation.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1038","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.8","title":"surveyvoi 1.0.3.8","text":"Standardize spelling (en-US).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1037","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.7","title":"surveyvoi 1.0.3.7","text":"Tweak package documentation. RandomFields package now optional dependency.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1036","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.6","title":"surveyvoi 1.0.3.6","text":"Update README system requirements PoissonBinomial package (#42).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1035","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.5","title":"surveyvoi 1.0.3.5","text":"Autoconf used installation Linux macOS operating systems.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1034","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.4","title":"surveyvoi 1.0.3.4","text":"Update prior_probability_matrix() compute prior probabilities existing survey data available.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1033","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.3","title":"surveyvoi 1.0.3.3","text":"Fix issue fit_xgb_occupancy_models() using specified number threads parallel processing. Ensure PSOCK FORK clusters used parallel processing terminated correctly, even processing interrupted.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1032","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.2","title":"surveyvoi 1.0.3.2","text":"Fix compatibility issues updated xgboost package (version 1.5.0). Fix parallel processing tests given updates testthat package (version 3.1.2). Fix tests environmental geographic survey schemes given updates gurobi package (version 9.5.0).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-1031","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3.1","title":"surveyvoi 1.0.3.1","text":"GMP dependencies Windows systems now handled using RWinLib (see https://github.com/rwinlib/gmp). Package configuration now reports compilation variables (.e. PKG_CPPFLAGS PKG_LIBS variables). Free Software Foundation longer listed contributor copyright holder GMP source files longer distributed package (GMP dependencies obtained via RWinLib). Configuration variables can now (optionally) used specify location GMP MPFR dependencies package installation (.e. GMP_INCLUDE_DIR, GMP_LIB_DIR, MPFR_INCLUDE_DIR MPFR_LIB_DIR). Although package configuration routine attempts deduce variables automatically, variables can used installation default settings fails. example, variables can set using following system command:","code":"R CMD INSTALL --configure-vars='GMP_INCLUDE_DIR=... GMP_LIB_DIR=... MPFR_INCLUDE_DIR=... MPFR_LIB_DIR=...'"},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-103","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.3","title":"surveyvoi 1.0.3","text":"CRAN release: 2021-05-31 CRAN release. Fix issue missing gmpxx file. Remove unused dependencies.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-102","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.2","title":"surveyvoi 1.0.2","text":"CRAN release: 2021-05-27 CRAN release. Update CRAN comments. Update examples. Improve documentation functions depend external software.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-101","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.1","title":"surveyvoi 1.0.1","text":"Fix typos documentation (#38). Add details tuning xgboost models documentation (#39).","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-100","dir":"Changelog","previous_headings":"","what":"surveyvoi 1.0.0","title":"surveyvoi 1.0.0","text":"Refactor official release. Add support generating surveys Rsymphony package.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-0076","dir":"Changelog","previous_headings":"","what":"surveyvoi 0.0.76","title":"surveyvoi 0.0.76","text":"functions appear work.","code":""},{"path":"https://github.com/prioritizr/surveyvoi/news/index.html","id":"surveyvoi-001","dir":"Changelog","previous_headings":"","what":"surveyvoi 0.0.1","title":"surveyvoi 0.0.1","text":"Initial commit.","code":""}]
